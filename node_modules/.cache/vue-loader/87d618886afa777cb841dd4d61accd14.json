{"remainingRequest":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haopeiwei/Documents/hpw/web-board/konva-board/src/page/konva.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/src/page/konva.vue","mtime":1612177642865},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/cache-loader/dist/cjs.js","mtime":1591588454175},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/babel-loader/lib/index.js","mtime":1591149279866},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/cache-loader/dist/cjs.js","mtime":1591588454175},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/vue-loader/lib/index.js","mtime":1592981491866}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["konva.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"konva.vue","sourceRoot":"src/page","sourcesContent":["<template>\n  <div>\n    <div id=\"image-decorator-wrap\">\n      <div id=\"image-canvas\"></div>\n    </div>\n\n    <select id=\"tool\">\n      <option value=\"brush\">Brush</option>\n      <option value=\"eraser\">Eraser</option>\n    </select>\n    <button @click=\"switchMode('brush')\">画笔模式</button>\n    <button @click=\"switchMode('eraser')\">橡皮擦模式</button>\n    <button @click=\"switchMode('moveobject')\">移动背景图片</button>\n    <button @click=\"switchMode('reset')\">重置</button>\n    <img :src=\"imgUrl\" class=\"img\" />\n    <button @click=\"toDataUrl\">点我下载</button>\n    <button @click=\"toNext\">下一张</button>\n    <button @click=\"toPrev\">上一张</button>\n    <button>{{ currIndex }}</button>\n    <button @click=\"setZoom('out')\">放大</button>\n    <button @click=\"setZoom('in')\">缩小</button>\n    <button @click=\"rotateTo('left')\">向左</button>\n    <button @click=\"rotateTo('right')\">向右</button>\n  </div>\n</template>\n\n<script>\nimport Konva from \"konva\";\nimport { imageList } from \"./util.js\";\nimport Item from \"./Item.js\";\n\nconst C_WIDTH = 800;\nconst C_HEIGHT = 600;\nconst methods = {\n  // 切换工具栏模式\n  switchMode(mode) {\n    this.mode = mode;\n    if (mode === \"brush\" || mode === \"eraser\") {\n      this.addEvent();\n      this.currItem.bgImg.draggable(false);\n    }\n    if (mode === \"moveobject\") {\n      this.removeStageEvents();\n      this.setCursorStyle(\"pointer\");\n      this.currItem.bgImg.draggable(true);\n    }\n\n    if (mode === \"reset\") {\n      this.stage.clear();\n      console.log(this.currIndex);\n      this.switchImage(0);\n    }\n  },\n  // 设置鼠标样式\n  setCursorStyle(type) {\n    switch (type) {\n      case \"pointer\":\n        document.body.style.cursor = \"pointer\";\n        break;\n      case \"default\":\n        document.body.style.cursor = \"pointer\";\n        break;\n      default:\n        document.body.style.cursor = \"pointer\";\n        break;\n    }\n  },\n  // 设置背景图片移动\n  moveBgImg() {\n    // console.log(\"this.stage\", this.stage, this.stage.listening);\n    // this.stage.listening(false);\n    // this.isMovingBgImg = true;\n    this.removeStageEvents();\n    this.currItem.bgImg.draggable(true);\n    this.setCursorStyle(\"pointer\");\n  },\n  // 旋转\n  rotateTo(type) {\n    if (type === \"left\") {\n      this.stage.rotation(-90);\n    }\n    if (type === \"right\") {\n      this.stage.rotation(90);\n    }\n    this.stage.batchDraw();\n  },\n  // 放大\n  setZoom(type) {\n    console.log(\"dasdada\", this.bgImgLayer, this.stage.getAttr(\"scaleX\"));\n    let zoom = this.stage.getAttr(\"scaleX\") || 1;\n    if (type == \"out\") {\n      // 放大\n      zoom = zoom + this.zoomStep;\n      zoom = Math.min(3, zoom); //最大是原来的3倍\n    }\n    if (type === \"in\") {\n      zoom = zoom - this.zoomStep;\n      zoom = Math.max(0.1, zoom); //最小为原来的1/10\n    }\n    this.stage.scale({\n      x: zoom,\n      y: zoom\n    });\n    this.stage.batchDraw();\n  },\n  // 移除stage事件监听\n  removeStageEvents() {\n    this.stage.off(\"mousedown\");\n    this.stage.off(\"mousemove\");\n    this.stage.off(\"mouseup\");\n  },\n  // 事件监听\n  addEvent() {\n    // if (this.isMovingBgImg) return;\n    // console.log(\"addEvent\");\n    let isPaint = false;\n    let lastLine;\n    this.stage.on(\"mousedown\", () => {\n      console.log(\"a\");\n      isPaint = true;\n      let pos = this.stage.getPointerPosition();\n      let oldScale = this.stage.scaleX();\n      lastLine = new Konva.Line({\n        stroke: \"#df4b26\",\n        strokeWidth: 5,\n        globalCompositeOperation:\n          this.mode === \"brush\" ? \"source-over\" : \"destination-out\",\n        points: [\n          pos.x / oldScale - this.stage.x() / oldScale,\n          pos.y / oldScale - this.stage.y() / oldScale\n        ]\n      });\n      this.freeDrawLayer.add(lastLine);\n    });\n    this.stage.on(\"mouseup\", () => {\n      isPaint = false;\n    });\n    this.stage.on(\"mousemove\", () => {\n      let oldScale = this.stage.scaleX();\n      if (!isPaint) {\n        return;\n      }\n      const pos = this.stage.getPointerPosition();\n      let newPoints = lastLine\n        .points()\n        .concat([\n          pos.x / oldScale - this.stage.x() / oldScale,\n          pos.y / oldScale - this.stage.y() / oldScale\n        ]);\n      lastLine.points(newPoints);\n      this.freeDrawLayer.batchDraw();\n    });\n    // let select = document.getElementById(\"tool\");\n    // select.addEventListener(\"change\", function() {\n    //   mode = select.value;\n    // });\n  },\n  // 反序列化\n  loadCanvasFromJSON(state) {\n    if (!state) return;\n    this.stage = Konva.Node.create(JSON.parse(state), \"image-canvas\");\n    // 添加背景图\n    this.stage.find(\"#bgImg\").forEach((node) => {\n      let img = new Image();\n      img.src = node.getAttr(\"source\");\n      img.onload = () => {\n        node.image(img);\n        this.stage.batchDraw();\n      };\n    });\n    // this.stage.findOne(\"#bgImg\")\n    this.freeDrawLayer = this.stage.getLayers()[1];\n    this.addEvent();\n    this.freeDrawLayer.batchDraw();\n    this.isSwitching = false;\n    // 画笔层\n    // let const1 = this.stage.find(\"#free_draw_canvas\");\n    // this.addEvent();\n  },\n  saveCurrItemState() {\n    if (!this.currItem) return;\n    let state = this.stage.toJSON();\n    this.currItem.save(state);\n  },\n  toNext() {\n    this.saveCurrItemState();\n    this.switchImage(this.currIndex + 1);\n  },\n  toPrev() {\n    this.saveCurrItemState();\n    this.switchImage(this.currIndex - 1);\n  },\n  toDataUrl() {\n    this.imgUrl = this.stage.toDataURL({\n      x: 0,\n      y: 0,\n      width: 600,\n      height: 400,\n      pixelRatio: 3\n    });\n  },\n  // 加载背景图片\n  loadBackImage(itemObj, cb) {\n    const { imageInfo } = itemObj;\n    const { scale } = imageInfo;\n    Konva.Image.fromURL(itemObj.originUrl, (kImg) => {\n      kImg.setAttrs({\n        // 设置居中\n        x: this.getBgImgXYOffset(scale.width, null),\n        y: this.getBgImgXYOffset(null, scale.height),\n        id: \"bgImg\",\n        source: itemObj.originUrl,\n        draggable: false,\n        width: scale.width,\n        height: scale.height\n      });\n      this.bgImgLayer.add(kImg);\n      this.bgImgLayer.batchDraw();\n      // 保存当前背景对象\n      this.currItem.bgImg = kImg;\n      cb && cb();\n    });\n  },\n  // 获取背景图片xy偏移量\n  getBgImgXYOffset(width, height) {\n    if (width) {\n      return C_WIDTH > width ? (C_WIDTH - width) / 2 : 0;\n    }\n    if (height) {\n      return C_HEIGHT > height ? (C_HEIGHT - height) / 2 : 0;\n    }\n  },\n\n  afterSwitch(index, itemObj, isFirstRender = false) {\n    if (isFirstRender) {\n      // 首次渲染;\n      if (!this.bgImgLayer) {\n        let bgImgLayer = new Konva.Layer();\n        this.bgImgLayer = bgImgLayer;\n        this.loadBackImage(itemObj, this.initFreeDrawCanvas);\n        this.stage.add(bgImgLayer);\n      } else {\n        this.bgImgLayer && this.bgImgLayer.removeChildren();\n        this.loadBackImage(itemObj);\n      }\n      this.clearFreeDrawLayer();\n      this.isSwitching = false;\n    }\n  },\n  // 设置stage宽高\n  setStageWH(w, h) {\n    this.stage.width(w);\n    this.stage.height(h);\n  },\n  // 清除画笔层\n  clearFreeDrawLayer() {\n    if (this.freeDrawLayer) {\n      this.freeDrawLayer.removeChildren();\n      this.freeDrawLayer.draw();\n    }\n  },\n  // 切换图层\n  switchImage(index) {\n    console.log(\"=====switchImage=====\", index);\n    if (index < -1) return;\n    if (this.isSwitching) return;\n    let img = this.imageList[index];\n    if (!img) return;\n    let itemObj;\n    if (img && !img.isRender) {\n      this.isSwitching = true;\n      console.log(\"首次渲染\");\n      // 首次渲染\n      itemObj = new Item(\n        {\n          url: this.imageList[index].url,\n          conWH: { width: 800, height: 600 }\n        },\n        () => this.afterSwitch(index, itemObj, true)\n      );\n      this.currIndex = index;\n      this.currItem = itemObj;\n      this.itemList[this.currIndex] = itemObj;\n      this.imageList[this.currIndex].isRender = true;\n    } else {\n      this.isSwitching = true;\n      this.currIndex = index;\n      // 非首次渲染\n      console.log(\"======非首次渲染=====\", this.currIndex);\n      console.log(\n        \"this.itemList[this.currIndex]\",\n        this.itemList[this.currIndex]\n      );\n      this.currItem = this.itemList[this.currIndex];\n      console.log(\" this.currItem\", this.currItem);\n      let currState = this.currItem.getCurrState();\n      console.log(\"currState\", currState);\n      this.loadCanvasFromJSON(JSON.parse(currState));\n      // this.loadBackImage(this.currItem);\n      // this.stage = Konva.Node.create(JSON.parse(currState), \"image-canvas\");\n      // // this.stage.find(\"#bgImg\").\n      // let image = new Image();\n      // image.onload = () => {\n      //   this.stage.find(\"#bgImg\")[0].image(image);\n      //   this.stage.draw();\n      // };\n      // image.src = this.currItem.originUrl;\n      // this.stage.find(\"#free_draw_canvas\")\n      // this.freeDrawLayer.batchDraw();\n      // this.stage.batchDraw();\n\n      // this.stage.forEach((d) => {\n      //   console.log(\"d\", d);\n      // });\n      // this.bgImgLayer.batchDraw();\n      // this.initFreeDrawCanvas();\n\n      // this.freeDrawLayer.batchDraw();\n      // this.freeDrawLayer.zIndex(99);\n    }\n  }\n};\nexport default {\n  methods,\n  mounted() {\n    // first we need Konva core things: stage and layer\n    let stage = new Konva.Stage({\n      container: \"image-canvas\",\n      scaleY: 1,\n      scaleX: 1,\n      centeredScaling: true,\n      // 确定了canvas的宽高\n      width: 800,\n      height: 600\n    });\n\n    this.stage = stage;\n\n    // 背景层\n    this.bgImgLayer = new Konva.Layer({\n      id: \"bg_image_layer\"\n    });\n\n    // 绘画层\n    this.freeDrawLayer = new Konva.Layer({\n      id: \"free_draw_layer\",\n      backgroundColor: \"red\"\n    });\n\n    this.stage.add(this.bgImgLayer);\n    this.stage.add(this.freeDrawLayer);\n\n    this.addEvent();\n\n    // 组装数据格式\n    this.imageList = this.imageList.map((d) => {\n      return {\n        isRender: false,\n        url: d\n      };\n    });\n    this.toNext();\n    // this.initFreeDrawCanvas();\n    // this.();\n\n    // 初始化时候需要异步\n    // setTimeout(() => {}, 100);\n  },\n  data() {\n    return {\n      mode: \"brush\",\n      isMovingBgImg: false,\n      zoomStep: 0.1,\n      stage: null,\n      imgUrl: null,\n      imageList: imageList,\n      currIndex: -1,\n      currItem: null,\n      itemList: [],\n      conWH: { width: 800, height: 600 },\n      freeDrawLayer: null,\n      bgImgLayer: null,\n      isSwitching: false\n    };\n  },\n  components: {}\n};\n</script>\n\n<style lang=\"less\" scoped>\n#image-decorator-wrap {\n  border: 1px solid red;\n  width: 800px;\n  height: 600px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n  overflow: hidden;\n\n  #image-canvas {\n    border: 1px solid yellow;\n  }\n  .img {\n    margin-top: 20px;\n    border: 1px solid blue;\n  }\n}\n</style>\n"]}]}