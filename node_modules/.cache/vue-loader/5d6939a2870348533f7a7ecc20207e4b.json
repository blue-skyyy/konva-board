{"remainingRequest":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haopeiwei/Documents/hpw/web-board/konva-board/src/page/index.vue?vue&type=style&index=0&id=277d1ceb&lang=less&scoped=true&","dependencies":[{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/src/page/index.vue","mtime":1600414783631},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/css-loader/dist/cjs.js","mtime":1594608463058},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1592981491866},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/postcss-loader/src/index.js","mtime":1591149286800},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/less-loader/dist/cjs.js","mtime":1597049187587},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/cache-loader/dist/cjs.js","mtime":1591588454175},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/vue-loader/lib/index.js","mtime":1592981491866}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNjb250YWluZXIgewogIC8vIG92ZXJmbG93OiBoaWRkZW47Cn0KI2ltYWdlX2NhbnZhc193cmFwIHsKICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsKICB3aWR0aDogODAwcHg7CiAgaGVpZ2h0OiA2MDBweDsKICBtYXJnaW46IDAgYXV0bzsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgb3ZlcmZsb3c6IGF1dG87CiAgYmFja2dyb3VuZDogI2ZmZjsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoCiAgICAgIDQ1ZGVnLAogICAgICAjY2NjIDI1JSwKICAgICAgdHJhbnNwYXJlbnQgMjUlLAogICAgICB0cmFuc3BhcmVudCA3NSUsCiAgICAgICNjY2MgNzUlLAogICAgICAjY2NjCiAgICApLAogICAgbGluZWFyLWdyYWRpZW50KAogICAgICA0NWRlZywKICAgICAgI2NjYyAyNSUsCiAgICAgIHRyYW5zcGFyZW50IDI1JSwKICAgICAgdHJhbnNwYXJlbnQgNzUlLAogICAgICAjY2NjIDc1JSwKICAgICAgI2NjYwogICAgKTsKICBiYWNrZ3JvdW5kLXNpemU6IDI0cHggMjRweDsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDAsIDEycHggMTJweDsKICAjaW1hZ2VfY2FudmFzIHsKICAgIGhlaWdodDogMTAwJTsKICAgIHdpZHRoOiAxMDAlOwogICAgYm9yZGVyOiAxcHggc29saWQgcmVkOwogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7CiAgICAvLyBib3JkZXItbGVmdDogMTBweCBzb2xpZCByZWQ7CiAgfQp9CiNtZW51IHsKICB3aWR0aDogODAwcHg7CiAgaGVpZ2h0OiA1MHB4OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB6LWluZGV4OiAxOwogIGJhY2tncm91bmQ6ICM0ODU1NjM7CiAgLyogZmFsbGJhY2sgZm9yIG9sZCBicm93c2VycyAqLwogIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KAogICAgdG8gYm90dG9tLAogICAgIzI5MzIzYywKICAgICM0ODU1NjMKICApOyAvKiBDaHJvbWUgMTAtMjUsIFNhZmFyaSA1LjEtNiAqLwogIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICMyOTMyM2MsICM0ODU1NjMpOwogIC8qIFczQywgSUUgMTArLyBFZGdlLCBGaXJlZm94IDE2KywgQ2hyb21lIDI2KywgT3BlcmEgMTIrLCBTYWZhcmkgNysgKi8KICBtYXJnaW46IDAgYXV0bzsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgLm1lbnVfaXRlbSB7CiAgICBmbGV4OiAxOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingsmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/page","sourcesContent":["<template>\n  <div>\n    <div id=\"container\">\n      <div id=\"image_canvas_wrap\" ref=\"image_canvas_wrap\">\n        <canvas id=\"image_canvas\" ref=\"image_canvas\"></canvas>\n      </div>\n      <div id=\"menu\">\n        <menu-switch-image\n          @prevFunc=\"prev\"\n          @nextFunc=\"next\"\n          :prev=\"myConfig && myConfig.prev\"\n          :next=\"myConfig && myConfig.next\"\n          class=\"menu_item\"\n        >\n        </menu-switch-image>\n\n        <menu-undo\n          :mode=\"mode\"\n          :canvas=\"canvas\"\n          @click=\"switchMode('undo')\"\n          class=\"menu_item\"\n        ></menu-undo>\n\n        <menu-drag\n          :mode=\"mode\"\n          :canvas=\"canvas\"\n          @click=\"switchMode('drag')\"\n          class=\"menu_item\"\n        />\n        <menu-pencil\n          :mode=\"mode\"\n          :canvas=\"canvas\"\n          @click=\"switchMode('pencil')\"\n          :color=\"myConfig && myConfig.color\"\n          :pencilSizeList=\"myConfig && myConfig.pencilSizeList\"\n          :pencilSize=\"myConfig && myConfig.pencilSize\"\n          @changeConfig=\"changeConfig\"\n          ref=\"pencil\"\n          class=\"menu_item\"\n        />\n\n        <menu-eraser\n          :canvas=\"canvas\"\n          :mode=\"mode\"\n          @click=\"switchMode('eraser')\"\n          class=\"menu_item\"\n        />\n        <menu-color\n          @click=\"switchMode\"\n          class=\"menu_item\"\n          :colorList=\"myConfig && myConfig.colorList\"\n          :mode=\"mode\"\n          @changeConfig=\"changeConfig\"\n        >\n        </menu-color>\n\n        <menu-rotate\n          class=\"menu_item\"\n          :canvas=\"canvas\"\n          :currItem=\"currItem\"\n          :rotateRight=\"myConfig && myConfig.rotateRight\"\n          :rotateLeft=\"myConfig && myConfig.rotateLeft\"\n        />\n\n        <menu-zoom\n          class=\"menu_item\"\n          :canvas=\"canvas\"\n          :zoomIn=\"myConfig && myConfig.zoomIn\"\n          :zoomOut=\"myConfig && myConfig.zoomOut\"\n        />\n\n        <menu-restore\n          :canvas=\"canvas\"\n          :bg=\"currItem && currItem.bgImg\"\n          :currItem=\"currItem\"\n          class=\"menu_item\"\n        ></menu-restore>\n\n        <menu-download\n          :canvas=\"canvas\"\n          class=\"menu_item\"\n          :exportImage=\"exportImage\"\n        >\n        </menu-download>\n\n        <button @click=\"saveCurrItemState\">点我保存状态</button>\n\n        <!-- <button @click=\"exportTest\">点我导出</button> -->\n      </div>\n    </div>\n\n    <img :src=\"imgUrl\" style=\"border: 1px solid blue\" />\n    <img :src=\"imgUrlExport\" style=\"border: 1px solid green\" />\n  </div>\n</template>\n\n<script>\nimport { fabric } from \"fabric\";\nimport _ from \"lodash\";\nimport { imageList } from \"./util.js\";\nimport Item from \"./Item\";\nimport MenuDrag from \"./menu/drag.vue\";\nimport MenuPencil from \"./menu/pencil.vue\";\nimport MenuZoom from \"./menu/zoom.vue\";\nimport MenuRestore from \"./menu/restore.vue\";\nimport MenuRotate from \"./menu/rotate.vue\";\nimport MenuColor from \"./menu/color.vue\";\nimport MenuEraser from \"./menu/eraser.vue\";\nimport MenuSwitchImage from \"./menu/switchImage.vue\";\nimport MenuDownload from \"./menu/download.vue\";\nimport MenuUndo from \"./menu/undo.vue\";\n// fabric.Object.prototype.set({\n//   borderColor: \"red\",\n//   cornerColor: \"red\", //激活状态角落图标的填充颜色\n//   cornerStrokeColor: \"\", //激活状态角落图标的边框颜色\n//   borderOpacityWhenMoving: 1,\n//   borderScaleFactor: 1,\n//   cornerSize: 8,\n//   cornerStyle: \"rect\", //rect,circle\n//   centeredScaling: false, //角落放大缩小是否是以图形中心为放大原点\n//   centeredRotation: true, //旋转按钮旋转是否是左上角为圆心旋转\n//   transparentCorners: false, //激活状态角落的图标是否透明\n//   rotatingPointOffset: 20, //旋转距旋转体的距离\n//   originX: \"center\",\n//   originY: \"center\",\n//   lockUniScaling: false, //只显示四角的操作\n//   hasRotatingPoint: true, //是否显示旋转按钮\n//   selectionDashArray: [5, 5]\n// });\nconst methods = {\n  // 延迟存储\n\n  preSave: _.debounce(function() {\n    this.saveCurrItemState();\n  }, 4000),\n  // 调整快照状态\n  fixState(state, { scaleX, scaleY }) {\n    if (!state) {\n      console.error(\"state is required\");\n      return false;\n    }\n    let stateObj = JSON.parse(state);\n    stateObj.objects[0].scaleY = scaleY;\n    stateObj.objects[0].scaleX = scaleX;\n    return JSON.stringify(stateObj);\n  },\n  // 导出图片的方法\n  exportImageFunc(item) {\n    return new Promise((reslove, reject) => {\n      if (!item) reject(\"item is required, item:\", item);\n      // this.saveCurrItemState(); // 导出时候默认保存一次，避免状态遗漏\n      const {\n        rotate,\n        imageInfo: { scale },\n        scaleX,\n        scaleY\n      } = item;\n      // 导出canvas\n      let exportCanvas;\n      if (!exportCanvas) {\n        exportCanvas = document.createElement(\"canvas\");\n        exportCanvas.id = \"export_canvas\";\n        exportCanvas.style.border = \"1px solid pink\";\n      } else {\n        exportCanvas.getObjects().forEach((child) => {\n          exportCanvas.remove(child);\n        });\n      }\n      // 调整宽高\n      const width = rotate % 180 === 0 ? scale.width : scale.height;\n      const height = rotate % 180 === 0 ? scale.height : scale.width;\n      exportCanvas = new fabric.Canvas(\"export_canvas\", {\n        width,\n        height\n      });\n\n      let state = item.getCurrState();\n      // 由于0.3333333 存储状态会保存为0.33 导出后比例有略微不同 手动保持一致\n      let fixState = this.fixState(state, { scaleY, scaleX });\n      exportCanvas.loadFromJSON(fixState, () => {\n        exportCanvas.discardActiveObject();\n        let sel = new fabric.ActiveSelection(exportCanvas.getObjects(), {\n          canvas: exportCanvas,\n          cornerSize: 0,\n          hasControls: false\n        });\n        exportCanvas.setActiveObject(sel);\n        sel.translateX = \"center\";\n        sel.translateY = \"center\";\n        sel.left = 0;\n        sel.top = 0;\n\n        // exportCanvas.centerObject(sel);\n        // document.appendChild(exportCanvas);\n\n        let data = exportCanvas.toDataURL({\n          // origin.height / scale.height,\n          // multiplier: 10, // 恢复比例导出\n          format: \"jpeg\",\n          quality: 0.8 // 降质量\n        });\n        exportCanvas.renderAll();\n        this.imgUrlExport = data;\n\n        reslove(data);\n      });\n    });\n  },\n  exportImage(type, index = this.currIndex) {\n    // let center = this.canvas.getCenter();\n    // let zoomPoint = new fabric.Point(center.left, center.top);\n    // this.canvas.zoomToPoint(zoomPoint, 1);\n    // this.canvas.renderAll();\n    // 导出单张(默认当前)或所有\n    if (!this.currItem || !type) return;\n    this.saveCurrItemState(); // 导出时候默认保存当前item一次，避免状态遗漏\n    if (type === \"single\") {\n      // 单张\n      if (index < 0) return;\n      return this.exportImageFunc(this.itemList[index]);\n    }\n    if (type === \"list\") {\n      // 全部\n      return this.imageList.map((d, i) => {\n        if (d.rendered) {\n          return this.exportImageFunc(this.itemList[i]);\n        } else {\n          return new Promise((reslove) => reslove(d));\n        }\n      });\n    }\n  },\n  initDocumentEvents() {\n    // 点击菜单外区域将弹出层清除\n    document.addEventListener(\"click\", (e) => {\n      let menu = document.querySelector(\"#menu\");\n      if (!e.target.id === \"menu\" || !menu.contains(e.target)) {\n        let pencil = this.$refs.pencil;\n        pencil && pencil.unShow();\n      }\n    });\n  },\n  changeConfig(prop, value) {\n    this.myConfig[prop] = value;\n    // console.log(\" this.myConfig----change\", this.myConfig);\n  },\n  freeDraw(canvas = this.canvas) {\n    this.canvas.isDrawingMode = true;\n    var hLinePatternBrush = new fabric.PatternBrush(canvas);\n    hLinePatternBrush.getPatternSrc = (function(fabric) {\n      return function() {\n        var patternCanvas = fabric.document.createElement(\"canvas\");\n        patternCanvas.width = patternCanvas.height = 10;\n        var ctx = patternCanvas.getContext(\"2d\");\n        ctx.strokeStyle = \"green\";\n        ctx.lineWidth = 10;\n        ctx.beginPath();\n        ctx.moveTo(5, 0);\n        ctx.lineTo(5, 10);\n        ctx.closePath();\n        ctx.stroke();\n        return patternCanvas;\n      };\n    })(fabric);\n\n    canvas.freeDrawingBrush = hLinePatternBrush;\n    // canvas.freeDrawingBrush.width = 20;\n  },\n  switchMode(mode) {\n    // if (this.mode === mode) {\n    //   this.mode = \"\";\n    //   return;\n    // }\n    this.mode = mode;\n    // if (this.mode === mode) return;\n    console.log(\"this.mode\", this.mode);\n\n    if (mode === \"undo\") {\n      this.undo();\n    }\n\n    if (mode === \"pencil\") {\n      // this.preSave();\n    }\n  },\n  test() {\n    this.freeDraw(this.canvas);\n  },\n  addrect() {\n    var rect = new fabric.Rect({\n      top: 50, //距离画布上边的距离\n      left: 100, //距离画布左侧的距离，单位是像素\n      width: 100, //矩形的宽度\n      height: 70, //矩形的高度\n      fill: \"blue\", //填充的颜色\n      stroke: \"orange\", // 边框原色\n      strokeWidth: 5, // 边框大小\n      rx: 8, //圆角半径\n      ry: 4 //圆角半径\n    });\n    this.rect = rect;\n\n    this.canvas.add(rect);\n    this.canvas.renderAll();\n  },\n  delreact() {\n    this.canvas.remove(this.rect);\n    this.canvas.renderAll();\n  },\n  prev() {\n    this.currIndex -= 1;\n    this.switchImage(this.currIndex);\n  },\n  next() {\n    this.currIndex += 1;\n    this.switchImage(this.currIndex);\n  },\n  setCanvasWH(w, h) {\n    this.canvas.setWidth(w);\n    this.canvas.setHeight(h);\n  },\n  initCanvasEvents() {\n    this.canvas.on(\"object:added\", this.dealAdd);\n    this.canvas.on(\"object:modified\", this.dealModify);\n    this.canvas.on(\"object:removed\", this.dealRemove);\n\n    // this.canvas.on(\"mouse:wheel\", this.mouseWheel);\n    this.canvas.on(\"path:created\", this.dealPathCreated);\n  },\n  dealPathCreated(e) {\n    // console.log(\"path----created\", e);\n    // this.canvas.remove(e.path);\n    // this.canvas.renderAll();\n\n    if (e.path.className === \"custom_path\") {\n      //\n    }\n    if (this.mode === \"eraser\") {\n      // let objs = this.canvas.getObjects();\n      // console.log(\"objs\", objs);\n      // let paths = [];\n      // for (let i = 0; i < objs.length; i++) {\n      //   if (objs[i].get(\"type\") === \"path\" && objs[i].modeType === \"eraser\") {\n      //     // path类型\n      //     paths.push(objs[i]);\n      //   }\n      // }\n    }\n\n    if (this.mode === \"pencil\") {\n      // cxt.globalCompositeOperation = \"source-over\";\n      // e.path.set({\n      //   globalCompositeOperation: \"source-over\"\n      // });\n      // e.path.globalCompositeOperation = \"source-over\";\n      // e.path.selectable = false;\n      // e.path.evented = false;\n      // e.path.absolutePositioned = true;\n    }\n\n    // this.canvas.renderAll();\n  },\n  toNext() {\n    this.currIndex += 1;\n    this.switchImage(this.currIndex);\n  },\n  dealAdd(e) {\n    let target = e.target;\n    // console.log(\"dealAdd\", target);\n    if (target.get(\"type\") === \"path\") {\n      if (target.className !== \"custom_path\") {\n        console.log(\"dealAdd\", target, target.left);\n        // this.canvas.remove(e.target);\n      }\n    }\n    // console.log(\"----dealAdd----\", e);\n    if (this.historyChanging) return;\n    if (e.target.isBg) return;\n    // if (!e.target.isContainedWithinObject(this.currItem.bgImg)) {\n    //   e.target.set({\n    //     hasBorders: false,\n    //     hasControls: false,\n    //     selectable: false\n    //   });\n    //   this.canvas.remove(e.target);\n    //   setTimeout(() => alert(\"请在图片范围内操作\"), 500);\n    //   return;\n    // }\n  },\n  dealModify() {\n    if (this.historyChanging) return;\n    // console.log(\"added\");\n  },\n  dealRemove() {\n    if (this.historyChanging) return;\n    // console.log(\"removed\");\n  },\n  clearBoard() {\n    this.canvas.getObjects().forEach((child) => {\n      this.canvas.remove(child);\n    });\n  },\n\n  afterSwitch(index, itemObj, firstRender = false) {\n    const { imageInfo, scaleX, scaleY } = itemObj;\n    if (firstRender) {\n      let bgImg = new fabric.Image();\n      bgImg.setSrc(\n        this.itemList[index].url,\n        () => {\n          bgImg.hasBorders = false;\n          bgImg.hasControls = false;\n          bgImg.selectable = false;\n          bgImg.scaleable = false;\n          // 0.33333 会导致导出图片有留白  如果放大则会导致图片导出不全\n          bgImg.scaleX = scaleX;\n          bgImg.scaleY = scaleY;\n          bgImg.scaleToHeight(imageInfo.scale.height, false);\n          bgImg.scaleToWidth(imageInfo.scale.width, false);\n          bgImg.crossOrigin = \"anonymous\";\n          bgImg.translateX = \"top\";\n          bgImg.translateY = \"left\";\n          // bgImg.globalCompositeOperation = \"destination-over\";\n          bgImg.left = 0;\n          bgImg.top = 0;\n          bgImg.zIndex = 1;\n          bgImg.isBg = true;\n          // 动态添加scale比例\n\n          this.clearBoard();\n          this.setCanvasWH(imageInfo.scale.width, imageInfo.scale.height);\n          // 初次加载的Image，需要自动创建一条历史记录\n          bgImg.sendToBack();\n          this.currItem.bgImg = bgImg;\n\n          this.canvas.add(bgImg);\n          this.saveCurrItemState();\n\n          this.canvas.renderAll();\n          this.historyChanging = false;\n          this.switching = false;\n        },\n        // 防止画布污染\n        { crossOrigin: \"anonymous\" }\n      );\n    } else {\n      // 非首次加载\n    }\n  },\n  switchImage(index) {\n    if (this.currIndex < 0) return;\n    let obj = this.imageList[index];\n    if (!obj) return;\n    let itemObj;\n    if (obj && !obj.rendered) {\n      console.log(\"首次渲染\");\n      // 首次渲染\n      itemObj = new Item(\n        {\n          url: this.imageList[index].url,\n          // canvas: this.canvas\n          conWH: this.conWH\n        },\n        () => this.afterSwitch(index, itemObj, true)\n      );\n      this.currItem = itemObj;\n      this.itemList[this.currIndex] = itemObj;\n      this.imageList[this.currIndex].rendered = true;\n    } else if (obj && obj.rendered) {\n      // 非首次渲染\n      console.log(\"非首次渲染\");\n      let state = itemObj.getCurrState();\n      this.canvas.loadFromJSON(state, () => {\n        this.afterSwitch(index, itemObj, false);\n        // this.bgImg = this.canvas.getObjects()[0];\n        // this.bgImg.rotate(itemObj.rotate);\n        // this.isCorrectionWorkVersion && this.changeZoom(itemObj.zoom);\n        // afterSwitch(false);\n      });\n    }\n  },\n  saveCurrItemState() {\n    console.count(\"=======saveCurrItemState=======\");\n    // 保存当前每个实例状态\n    if (!this.currItem) return;\n    let imgData = this.canvas.toDataURL();\n    this.canvas.renderAll();\n    this.currItem.save(\n      imgData,\n      this.canvas.toJSON([\"width\", \"height\", \"zoom\"])\n    );\n    this.imgUrl = imgData;\n  },\n  undo() {\n    if (!this.currItem || this.historyChanging) return;\n    let history = this.currItem.getPreHistory();\n    const { scaleY, scaleX } = this.currItem;\n    let fixHistory = this.fixState(history, { scaleX, scaleY });\n    if (fixHistory) {\n      const historyObj = JSON.parse(fixHistory);\n      const { width, height } = historyObj;\n      this.canvas.loadFromJSON(fixHistory, () => {\n        if (width && height) {\n          this.setCanvasWH(width, height);\n        }\n        this.historyChanging = false;\n        this.canvas.renderAll();\n      });\n    }\n  }\n};\nexport default {\n  mounted() {\n    // 静用缓存 该属性会对line hover事件产生影响 高亮不生效\n    fabric.Object.prototype.objectCaching = false;\n    let canvas = new fabric.Canvas(\"image_canvas\", {\n      backgroundColor: \"#fff\"\n      // selection: false\n      // isDrawingMode: true\n    });\n\n    // 实现mouseover事件\n    canvas.findTarget = (function(originalFn) {\n      return function() {\n        let target = originalFn.apply(this, arguments);\n        if (target) {\n          if (this._hoveredTarget !== target) {\n            canvas.fire(\"object:over\", { target: target });\n            if (this._hoveredTarget) {\n              canvas.fire(\"object:out\", { target: this._hoveredTarget });\n            }\n            this._hoveredTarget = target;\n          }\n        } else if (this._hoveredTarget) {\n          canvas.fire(\"object:out\", { target: this._hoveredTarget });\n          this._hoveredTarget = null;\n        }\n        return target;\n      };\n    })(canvas.findTarget);\n\n    this.canvas = canvas;\n\n    this.initCanvasEvents();\n\n    this.initDocumentEvents();\n\n    // this.freeDraw(canvas);\n\n    this.imageList = this.imageList.map((d) => {\n      return {\n        url: d,\n        rendered: false\n      };\n    });\n\n    let containerDOM;\n    this.$nextTick(() => {\n      containerDOM = this.$refs.image_canvas_wrap;\n      this.conWH = {\n        width: containerDOM.clientWidth,\n        height: containerDOM.clientHeight\n      };\n      this.toNext();\n      // this.addrect();\n    });\n  },\n  methods,\n  props: {\n    config: {\n      default: () => {},\n      type: Object\n    }\n  },\n  data() {\n    const defaultConfig = {\n      colorList: [\"#b92b27\", \"#ee9ca7\", \"#1565C0\", \"#a8ff78\"],\n      color: \"#b92b27\",\n      pencilSizeList: [1, 2, 3, 4],\n      pencilSize: 1,\n      rotateLeft: true,\n      rotateRight: true,\n      zoomIn: true,\n      zoomOut: true,\n      prev: true,\n      next: true\n    };\n    return {\n      canvas: null,\n      conWH: {},\n      historyChanging: false,\n      imageList: imageList,\n      itemList: [],\n      currIndex: -1,\n      currItem: null,\n      panning: false,\n      mode: \"\",\n      freeDrawingBrushWidth: 20,\n      myConfig: Object.assign({}, defaultConfig, this.config),\n      imgUrl: null,\n      imgUrlExport: null\n\n      // colors: {}\n      // statusList: null,\n    };\n  },\n  components: {\n    MenuDrag,\n    MenuPencil,\n    MenuZoom,\n    MenuRestore,\n    MenuRotate,\n    MenuColor,\n    MenuEraser,\n    MenuSwitchImage,\n    MenuDownload,\n    MenuUndo\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n#container {\n  // overflow: hidden;\n}\n#image_canvas_wrap {\n  box-sizing: content-box;\n  width: 800px;\n  height: 600px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: auto;\n  background: #fff;\n  background-image: linear-gradient(\n      45deg,\n      #ccc 25%,\n      transparent 25%,\n      transparent 75%,\n      #ccc 75%,\n      #ccc\n    ),\n    linear-gradient(\n      45deg,\n      #ccc 25%,\n      transparent 25%,\n      transparent 75%,\n      #ccc 75%,\n      #ccc\n    );\n  background-size: 24px 24px;\n  background-position: 0 0, 12px 12px;\n  #image_canvas {\n    height: 100%;\n    width: 100%;\n    border: 1px solid red;\n    box-sizing: border-box;\n    display: flex;\n    align-self: center;\n    // border-left: 10px solid red;\n  }\n}\n#menu {\n  width: 800px;\n  height: 50px;\n  position: relative;\n  z-index: 1;\n  background: #485563;\n  /* fallback for old browsers */\n  background: -webkit-linear-gradient(\n    to bottom,\n    #29323c,\n    #485563\n  ); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to bottom, #29323c, #485563);\n  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  .menu_item {\n    flex: 1;\n    position: relative;\n  }\n}\n</style>\n"]}]}