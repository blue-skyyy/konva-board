{"remainingRequest":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/babel-loader/lib/index.js!/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haopeiwei/Documents/hpw/web-board/konva-board/src/components/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/src/components/index.vue","mtime":1599816203768},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/cache-loader/dist/cjs.js","mtime":1591588454175},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/babel-loader/lib/index.js","mtime":1606707433631},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/cache-loader/dist/cjs.js","mtime":1591588454175},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/vue-loader/lib/index.js","mtime":1592981491866}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"canvas-container\">\n      <canvas ref=\"canvas\" id=\"canvas\"></canvas>\n      <h5-canvas\n        :width=\"config.width\"\n        :height=\"config.height\"\n        :color=\"color\"\n        :mode=\"mode\"\n        ref=\"h5canvas\"\n        :item=\"currItem\"\n        class=\"h5canvas\"\n        :fc=\"canvas\"\n      ></h5-canvas>\n    </div>\n    <button @click=\"changeMode('pencil')\">画笔模式</button>\n    <button @click=\"changeMode('eraser')\">橡皮擦模式</button>\n    <button @click=\"saveState\">保存状态</button>\n    <button @click=\"reStoreState\">清除状态</button>\n    <button @click=\"undo\">上一步</button>\n    <button @click=\"switchToNext(1)\">切换图片</button>\n    <button @click=\"exportTest\">导出</button>\n    <button @click=\"composeImageTest\">生成合成图片</button>\n    <button @click=\"addRect\">添加fabric对象</button>\n    <button @click=\"addRect1\">添加fabric对象1</button>\n    <button @click=\"removeRect\">删除fabric对象</button>\n    <img :src=\"baseUrl\" />\n    <img :src=\"composeUrl\" />\n  </div>\n</template>\n\n<script>\nimport { fabric } from \"fabric\";\nimport h5Canvas from \"./module/h5canvas\";\nimport Item from \"./Item.js\";\nimport { composeCanvas } from \"../utils.js\";\n// isImageVaild,\nconst defaultConfig = {\n  width: 800,\n  height: 500\n};\nexport default {\n  components: {\n    h5Canvas\n  },\n  data() {\n    return {\n      canvas: null,\n      points: [],\n      beginPoint: null,\n      endPoint: null,\n      ctx: null,\n      canDraw: false,\n      priviousPressure: 0,\n      baseLineList: [6, 10, 15, 25],\n      pathStr: \"\",\n      color: \"red\",\n      mode: \"pencil\",\n      config: Object.assign({}, defaultConfig),\n      imagesList: [\n        \"https://img.vipkidstatic.com/beeschool/server/20200717/ccb8432c-acf2-4f63-b51d-4195a3fde520.png\",\n        \"https://img.vipkidstatic.com/beeschool/server/20200717/b279967c-4d95-4603-899c-74db4092d5b8.png\"\n      ],\n      currIndex: 0,\n      itemList: [],\n      currItem: null,\n      isFirstRender: true,\n      loadedStatus: [],\n      baseUrl: null,\n      composeUrl: null,\n      rect: null,\n      historyChanging: false // 避免added触发\n    };\n  },\n  mounted() {\n    this.initCanvas();\n    this.switchToNext();\n  },\n  methods: {\n    removeRect() {\n      this.canvas.remove(this.rect);\n    },\n    undo() {\n      // 返回上一步\n      if (!this.currItem) return;\n      if (this.historyChanging) return;\n      let state = this.currItem.getPreHistory();\n      if (!state) return;\n      this.historyChanging = true;\n      console.log(\"state\", state);\n      const { type, data } = state;\n      if (type === \"h5\") {\n        this.$refs.h5canvas.putImageData(data);\n        this.historyChanging = false;\n        console.log(\"this.historyChanging---h5\", this.historyChanging);\n      } else if (type === \"fabric\") {\n        this.canvas.loadFromJSON(data, () => {\n          this.historyChanging = false;\n          this.canvas.renderAll();\n          console.log(\"this.historyChanging--fabric\", this.historyChanging);\n        });\n      } else {\n        this.$refs.h5canvas.putImageData(state[0].data);\n        this.canvas.loadFromJSON(state[1].data, () => {\n          this.historyChanging = false;\n          this.canvas.renderAll();\n        });\n      }\n    },\n    addRect() {\n      var rect = new fabric.Rect({\n        top: 50, //距离画布上边的距离\n        left: 100, //距离画布左侧的距离，单位是像素\n        width: 100, //矩形的宽度\n        height: 70, //矩形的高度\n        fill: \"blue\", //填充的颜色\n        stroke: \"orange\", // 边框原色\n        strokeWidth: 5, // 边框大小\n        rx: 8, //圆角半径\n        ry: 4 //圆角半径\n      });\n      this.rect = rect;\n\n      this.canvas.add(rect);\n    },\n    addRect1() {\n      var rect = new fabric.Rect({\n        top: 50, //距离画布上边的距离\n        left: 200, //距离画布左侧的距离，单位是像素\n        width: 200, //矩形的宽度\n        height: 1000, //矩形的高度\n        fill: \"red\", //填充的颜色\n        stroke: \"red\", // 边框原色\n        strokeWidth: 5, // 边框大小\n        rx: 8, //圆角半径\n        ry: 4 //圆角半径\n      });\n      this.rect = rect;\n\n      this.canvas.add(rect);\n    },\n    composeImageTest() {\n      // console.log(\"this.canvas.toDataURL()\", this.canvas.toDataURL());\n      let url = composeCanvas(\n        this.config.width,\n        this.config.height,\n        document.querySelector(\".h5canvas\"),\n        // this.canvas.toDataURL()\n        document.querySelector(\"#canvas\")\n        // document.querySelector(\".lower-canvas\")\n      );\n      this.composeUrl = url;\n      console.log(\"url\", url);\n    },\n    exportTest() {\n      this.baseUrl = this.currItem.h5exprot();\n    },\n    saveState() {\n      // this.$refs.h5canvas.save();\n      // this.currItem.h5save();\n    },\n    reStoreState() {\n      this.currItem.geth5State(\"undo\");\n    },\n    pre() {},\n    changeMode(mode) {\n      this.mode = mode;\n    },\n\n    save() {\n      if (!this.currItem) return;\n      console.log(\"-----in---save-----\");\n      // console.log(\"-----save-----data\", data);\n      this.canvas.renderAll();\n      let data = this.canvas.toJSON();\n      this.currItem.save(\"fabric\", data);\n    },\n    dealAdd() {\n      if (this.historyChanging) return;\n      console.log(\"----dealAdd----\");\n      this.save();\n      // let state = JSON.stringify(this.canvas.toJSON());\n      // this.currItem.save(\"fabric\", state);\n\n      //       // 忽略loadFromJSON过程中触发的add\n      // if (this.switching || this.historyChanging) return;\n      // // 忽略添加背景图片触发的add\n      // if (e.target.isBackground) return;\n      // if (this.mode === \"pencil\" && this.myAutoSave) {\n      //   // 由于画笔会频繁触发保存函数，重新render，视觉会造成反应不及时的问题，限制2s才触发一次\n      //   this.debounceMethod(this);\n      //   return;\n      // }\n      // this.myAutoSave && this.prepareSave();\n    },\n    dealModify() {\n      if (this.historyChanging) return;\n      // console.log(\"added\");\n    },\n    dealRemove() {\n      if (this.historyChanging) return;\n      // console.log(\"removed\");\n    },\n\n    initCanvas() {\n      let canvas = new fabric.Canvas(\"canvas\", {\n        isDrawingMode: false,\n        width: 800,\n        height: 500\n      });\n\n      // canvas.on(\"object:modified\", () => {\n      //   console.log(\"object:modified\");\n      //   let state = JSON.stringify(canvas);\n      //   this.currItem.save(state);\n      // });\n      // canvas.on(\"object:added\", () => {\n      //   console.log(\"object:added\");\n      //   let state = JSON.stringify(canvas);\n      //   this.currItem.save(state);\n      // });\n      // canvas.on(\"object:removed\", () => {\n      //   console.log(\"object:removed\");\n      // });\n\n      canvas.on(\"object:added\", this.dealAdd);\n      canvas.on(\"object:modified\", this.dealModify);\n      canvas.on(\"object:removed\", this.dealRemove);\n      // canvas.on(\"after:render\", () => { })\n      this.canvas = canvas;\n\n      this.loadedStatus = new Array(this.imagesList.lenthg).fill(false);\n    },\n    switchToNext(index) {\n      this.switchImage(index);\n    },\n\n    async switchImage(index) {\n      // 每加载一张图片才会生成一个实例\n      this.currIndex = index || 0;\n\n      if (!this.loadedStatus[this.currIndex]) {\n        // 首次加载\n        let item = new Item({\n          url: this.imagesList[this.currIndex],\n          canvas: this.canvas,\n          h5canvas: this.$refs.h5canvas\n        });\n        item.isImageVaild().then((res) => {\n          // 图片合法\n          if (res.status === \"ok\") {\n            let center = this.canvas.getCenter();\n            this.canvas.setBackgroundImage(\n              this.imagesList[this.currIndex],\n              this.canvas.renderAll.bind(this.canvas),\n              {\n                // scaleX: 1.2,\n                // scaleY: 1.2,\n                width: this.canvas.width,\n                height: this.canvas.height,\n                top: center.top,\n                left: center.left,\n                originX: \"center\",\n                originY: \"center\",\n                crossOrigin: \"anonymous\",\n                isBackImg: true\n              }\n            );\n            this.itemList.push(item);\n            this.currItem = item;\n            this.loadedStatus[this.currIndex] = true;\n            // 自动保存一条记录\n            // this.currItem.h5save(\"init\");\n            let h5data = this.$refs.h5canvas.saveImageData();\n            this.currItem.save(\"h5\", h5data, \"init\");\n            setTimeout(() => {\n              this.currItem.save(\"fabric\", this.canvas.toJSON(), \"init\");\n            }, 100);\n          }\n        });\n      } else {\n        // 非首次加载\n      }\n    },\n    // async switchImagetest(index) {\n    //   // 每加载一张图片才会生成一个实例\n    //   this.currIndex = index || 0;\n    //   if (this.isFirstRender) {\n    //     // 首次渲染\n    //     let promiseList = [];\n    //     this.imagesList.forEach((url) => {\n    //       promiseList.push(isImageVaild(url));\n    //     });\n    //     const result = await Promise.allSettled(promiseList);\n    //     result.forEach((p) => {\n    //       // if (p.status === \"fulfilled\") {\n    //       //   this.itemList.push(new Item({ p: res.url, canvas: this.canvas }));\n    //       // }\n    //       if (p.status === \"rejected\" || p.status === \"fulfilled\") {\n    //         this.itemList.push(\n    //           new Item({ url: p.value.url, canvas: this.canvas })\n    //         );\n    //       }\n    //     });\n    //     this.isFirstRender = false;\n    //   }\n    //   this.currItem = this.itemList[this.currIndex];\n    //   this.currItem.historyList.push(JSON.stringify(this.canvas));\n    //   let center = this.canvas.getCenter();\n    //   this.canvas.setBackgroundImage(\n    //     this.itemList[this.currIndex].url,\n    //     this.canvas.renderAll.bind(this.canvas),\n    //     {\n    //       // width: (this.canvas.width / 3) * 2,\n    //       // height: this.canvas.height,\n    //       // height: 800,\n    //       // origin: \"center\"\n    //       scaleX: 1,\n    //       scaleY: 1,\n    //       // top: 0,\n    //       top: center.top,\n    //       left: center.left,\n    //       // left: 0,\n    //       originX: \"center\",\n    //       originY: \"center\"\n    //       // originX: \"center\",\n    //       // originY: \"top\"\n    //     }\n    //   );\n    //   this.$refs.h5canvas.save();\n    // },\n    pathToCurve(path, controlPointsNum = 2) {\n      // M 开始 L 结束\n      let support = [\"M\", \"L\"];\n      let curve = { 2: \"Q\", 3: \"C\" };\n      let str = \"\";\n      for (let i = 0; i < path.length; i++) {\n        let { command, x, y } = path[i];\n        if (!support.includes(command)) {\n          throw new Error(`${command} is not support width start`);\n        }\n        if (i % controlPointsNum === 0) {\n          // 剩余点数不够组成曲线时使用L\n          let cmd =\n            i + controlPointsNum <= path.length ? curve[controlPointsNum] : \"L\";\n          str += ` ${cmd} ${x} ${y}`;\n        } else {\n          str += ` ${x} ${y}`;\n        }\n      }\n      return str;\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.canvas-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 5px solid red;\n  position: relative;\n  overflow-y: scroll;\n  #canvas {\n    box-sizing: border-box;\n  }\n  // .h5-canvas {\n  //   border: 1px solid green;\n  //   position: absolute;\n  //   z-index: 999;\n  // }\n}\n</style>\n"],"sourceRoot":"src/components"}]}