{"remainingRequest":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/babel-loader/lib/index.js!/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haopeiwei/Documents/hpw/web-board/konva-board/src/page/Konva/ImgDecorator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/src/page/Konva/ImgDecorator.vue","mtime":1612683539943},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/cache-loader/dist/cjs.js","mtime":1591588454175},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/babel-loader/lib/index.js","mtime":1606707433631},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/cache-loader/dist/cjs.js","mtime":1591588454175},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/vue-loader/lib/index.js","mtime":1610942723088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ImgDecorator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,KAAA,MAAA,OAAA;AACA,SACA,SADA,EAEA,gBAFA,EAGA,OAHA,EAIA,QAJA,EAKA,kBALA,CAMA;AANA,OAOA,YAPA;AAQA,OAAA,IAAA,MAAA,YAAA,C,CACA;;AAEA,IAAA,OAAA,GAAA;AACA,EAAA,GADA,iBACA;AACA,QAAA,KAAA,GAAA,KAAA,QAAA,CAAA,aAAA,EAAA;AACA,SAAA,kBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA;AACA,GAJA;AAKA,EAAA,IALA,kBAKA;AACA,QAAA,KAAA,GAAA,KAAA,QAAA,CAAA,cAAA,EAAA;AACA,SAAA,kBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA;AACA,GARA;AASA,EAAA,OATA,qBASA;AACA,SAAA,KAAA,CAAA,SAAA;AACA,GAXA;AAYA;AACA;AACA,EAAA,UAdA,sBAcA,IAdA,EAcA;AACA,SAAA,IAAA,GAAA,IAAA;;AACA,QAAA,IAAA,KAAA,OAAA,IAAA,IAAA,KAAA,QAAA,EAAA;AACA,WAAA,QAAA;AACA,WAAA,QAAA,CAAA,KAAA,IAAA,KAAA,QAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA;AACA;;AACA,QAAA,IAAA,KAAA,YAAA,EAAA;AACA,WAAA,iBAAA;AACA,WAAA,cAAA,CAAA,SAAA;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,SAAA,CAAA,IAAA;AACA;;AAEA,QAAA,IAAA,KAAA,OAAA,EAAA;AACA,WAAA,QAAA,CAAA,SAAA,CAAA,CAAA;AACA,MAAA,kBAAA,CAAA,KAAA,QAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AACA,UAAA,KAAA,GAAA,KAAA,QAAA,CAAA,cAAA,EAAA;AACA,WAAA,kBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA;AACA,WAAA,QAAA,CAAA,gBAAA;AACA,WAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA;AACA,WAAA,UAAA,CAAA,OAAA;AACA;AACA,GAnCA;AAoCA;AACA,EAAA,cArCA,0BAqCA,IArCA,EAqCA;AACA,YAAA,IAAA;AACA,WAAA,SAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,GAAA,SAAA;AACA;;AACA,WAAA,SAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,GAAA,SAAA;AACA;;AACA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,GAAA,SAAA;AACA;AATA;AAWA,GAjDA;AAkDA;AACA,EAAA,SAnDA,uBAmDA;AACA;AACA;AACA;AACA,SAAA,iBAAA;AACA,SAAA,QAAA,CAAA,KAAA,CAAA,SAAA,CAAA,IAAA;AACA,SAAA,cAAA,CAAA,SAAA;AACA,GA1DA;AA2DA;AACA,EAAA,QA5DA,oBA4DA,IA5DA,EA4DA;AACA;AACA,SAAA,OAAA,CAAA,MAAA;AACA,SAAA,QAAA,CAAA,QAAA,CAAA,IAAA;AACA,SAAA,iBAAA;AAJA,QAKA,MALA,GAKA,KAAA,QALA,CAKA,MALA;AAMA,IAAA,kBAAA,CAAA,KAAA,KAAA,EAAA,MAAA,CAAA;AACA,SAAA,QAAA;AACA,SAAA,KAAA,CAAA,SAAA;AACA,GArEA;AAsEA;AACA,EAAA,OAvEA,mBAuEA,IAvEA,EAuEA;AACA,QAAA,IAAA;;AACA,QAAA,IAAA,KAAA,MAAA,EAAA;AACA,MAAA,IAAA,GAAA,CAAA;AACA,KAFA,MAEA;AACA,MAAA,IAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,QAAA,KAAA,CAAA;;AACA,UAAA,IAAA,IAAA,KAAA,EAAA;AACA;AACA,QAAA,IAAA,GAAA,IAAA,GAAA,KAAA,QAAA;AACA,QAAA,IAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAHA,CAGA;AACA;;AACA,UAAA,IAAA,KAAA,IAAA,EAAA;AACA,QAAA,IAAA,GAAA,IAAA,GAAA,KAAA,QAAA;AACA,QAAA,IAAA,GAAA,IAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,CAFA,CAEA;AACA;AACA;;AACA,SAAA,KAAA,CAAA,KAAA,CAAA;AACA,MAAA,CAAA,EAAA,IADA;AAEA,MAAA,CAAA,EAAA;AAFA,KAAA;AAIA,SAAA,KAAA,CAAA,SAAA;AACA,GA5FA;AA6FA;AACA,EAAA,iBA9FA,+BA8FA;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,WAAA;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,WAAA;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,SAAA;AACA,GAlGA;AAoGA,EAAA,cApGA,0BAoGA,GApGA,EAoGA,QApGA,EAoGA;AACA;AADA,QAEA,MAFA,GAEA,KAAA,QAFA,CAEA,MAFA;AAGA,WAAA,MAAA,KAAA,CAAA,GACA,CACA,GAAA,CAAA,CAAA,GAAA,QAAA,GAAA,KAAA,KAAA,CAAA,CAAA,KAAA,QADA,EAEA,GAAA,CAAA,CAAA,GAAA,QAAA,GAAA,KAAA,KAAA,CAAA,CAAA,KAAA,QAFA,CADA,GAKA,MAAA,KAAA,EAAA,IAAA,MAAA,KAAA,CAAA,GAAA,GACA,CACA,GAAA,CAAA,CAAA,GAAA,QAAA,GAAA,KAAA,KAAA,CAAA,CAAA,KAAA,QADA,EAEA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA,GAAA,KAAA,KAAA,CAAA,CAAA,KAAA,QAFA,CADA,GAKA,MAAA,KAAA,CAAA,EAAA,IAAA,MAAA,KAAA,GAAA,GACA,CACA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA,GAAA,KAAA,KAAA,CAAA,CAAA,KAAA,QADA,EAEA,GAAA,CAAA,CAAA,GAAA,QAAA,GAAA,KAAA,KAAA,CAAA,CAAA,KAAA,QAFA,CADA,GAKA,MAAA,KAAA,GAAA,IAAA,MAAA,KAAA,CAAA,GAAA,GACA,CACA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA,GAAA,KAAA,KAAA,CAAA,CAAA,KAAA,QADA,EAEA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA,GAAA,KAAA,KAAA,CAAA,CAAA,KAAA,QAFA,CADA,GAKA,IApBA;AAqBA,GA5HA;AA6HA;AACA,EAAA,QA9HA,sBA8HA;AAAA;;AACA,QAAA,OAAA,GAAA,KAAA;AACA,QAAA,QAAA;AACA,SAAA,KAAA,CAAA,EAAA,CAAA,WAAA,EAAA,YAAA;AACA,MAAA,OAAA,GAAA,IAAA;;AACA,UAAA,GAAA,GAAA,KAAA,CAAA,KAAA,CAAA,kBAAA,EAAA,CAFA,CAGA;;;AACA,UAAA,QAAA,GAAA,KAAA,CAAA,KAAA,CAAA,MAAA,EAAA;;AACA,MAAA,QAAA,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA;AACA,QAAA,MAAA,EAAA,SADA;AAEA,QAAA,WAAA,EAAA,CAFA;AAGA,QAAA,wBAAA,EACA,KAAA,CAAA,IAAA,KAAA,OAAA,GAAA,aAAA,GAAA,iBAJA;AAKA,QAAA,MAAA,EAAA,KAAA,CAAA,cAAA,CAAA,GAAA,EAAA,QAAA;AALA,OAAA,CAAA;;AAOA,MAAA,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,QAAA;AACA,KAbA;AAcA,SAAA,KAAA,CAAA,EAAA,CAAA,SAAA,EAAA,YAAA;AACA,MAAA,OAAA,GAAA,KAAA;;AACA,MAAA,KAAA,CAAA,iBAAA;AACA,KAHA;AAIA,SAAA,KAAA,CAAA,EAAA,CAAA,WAAA,EAAA,YAAA;AACA,UAAA,QAAA,GAAA,KAAA,CAAA,KAAA,CAAA,MAAA,EAAA;;AACA,UAAA,CAAA,OAAA,EAAA;AACA;AACA,OAJA,CAKA;;;AACA,UAAA,GAAA,GAAA,KAAA,CAAA,KAAA,CAAA,kBAAA,EAAA;;AACA,UAAA,SAAA,GAAA,QAAA,CACA,MADA,GAEA,MAFA,CAEA,KAAA,CAAA,cAAA,CAAA,GAAA,EAAA,QAAA,CAFA,CAAA;AAGA,MAAA,QAAA,CAAA,MAAA,CAAA,SAAA;;AACA,MAAA,KAAA,CAAA,aAAA,CAAA,SAAA;AACA,KAZA;AAaA,GAhKA;AAiKA;AACA,EAAA,kBAlKA,8BAkKA,KAlKA,EAkKA;AACA,QAAA,CAAA,KAAA,EAAA;AACA,SAAA,KAAA,GAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,cAAA,CAAA,CAFA,CAGA;AACA;;AACA,SAAA,UAAA,GAAA,KAAA,KAAA,CAAA,SAAA,GAAA,CAAA,CAAA;AACA,SAAA,UAAA,CAAA,GAAA,CAAA,KAAA,QAAA,CAAA,KAAA;AACA,SAAA,UAAA,CAAA,SAAA,GAPA,CAQA;;AACA,SAAA,aAAA,GAAA,KAAA,KAAA,CAAA,SAAA,GAAA,CAAA,CAAA;AACA,SAAA,aAAA,CAAA,SAAA;AACA,SAAA,WAAA,GAAA,KAAA;AACA,GA9KA;AA+KA,EAAA,iBA/KA,+BA+KA;AACA,QAAA,CAAA,KAAA,QAAA,EAAA;AACA,QAAA,KAAA,GAAA,KAAA,KAAA,CAAA,MAAA,EAAA;AACA,SAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,GAnLA;AAoLA,EAAA,MApLA,oBAoLA;AACA;AACA,SAAA,WAAA,CAAA,KAAA,SAAA,GAAA,CAAA;AACA,GAvLA;AAwLA,EAAA,MAxLA,oBAwLA;AACA;AACA,SAAA,WAAA,CAAA,KAAA,SAAA,GAAA,CAAA;AACA,GA3LA;AA4LA,EAAA,SA5LA,uBA4LA;AACA,QAAA,MAAA,GAAA,KAAA,KAAA,CAAA,SAAA,CAAA;AACA,MAAA,CAAA,EAAA,CADA;AAEA,MAAA,CAAA,EAAA,CAFA;AAGA,MAAA,KAAA,EAAA,OAHA;AAIA,MAAA,MAAA,EAAA,QAJA;AAKA,MAAA,UAAA,EAAA,CALA,CAKA;;AALA,KAAA,CAAA;AAQA,SAAA,KAAA,CAAA,aAAA,EAAA,MAAA;AACA,GAtMA;AAuMA;AACA,EAAA,aAxMA,yBAwMA,OAxMA,EAwMA;AAAA;;AACA,WAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AAAA,UACA,SADA,GACA,OADA,CACA,SADA;AAAA,UAEA,KAFA,GAEA,SAFA,CAEA,KAFA;AAGA,MAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,OAAA,CAAA,SAAA,EAAA,UAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,QAAA,CAAA;AACA;AACA,UAAA,CAAA,EAAA,gBAAA,CAAA,KAAA,CAAA,KAAA,EAAA,IAAA,EAAA,MAAA,CAAA,OAAA,EAAA,GAAA,CAFA;AAGA,UAAA,CAAA,EAAA,gBAAA,CAAA,IAAA,EAAA,KAAA,CAAA,MAAA,EAAA,MAAA,CAAA,OAAA,EAAA,GAAA,CAHA;AAIA,UAAA,EAAA,EAAA,OAJA;AAKA,UAAA,SAAA,EAAA,KALA;AAMA,UAAA,MAAA,EAAA,OAAA,CAAA,SANA;AAOA,UAAA,KAAA,EAAA,KAAA,CAAA,KAPA;AAQA,UAAA,MAAA,EAAA,KAAA,CAAA;AARA,SAAA;;AAUA,QAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,IAAA;;AACA,QAAA,MAAA,CAAA,UAAA,CAAA,SAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,KAAA,GAAA,IAAA;AACA,QAAA,OAAA;AACA,OAfA;AAgBA,KAnBA,CAAA;AAoBA,GA7NA;AA+NA,EAAA,WA/NA,uBA+NA,KA/NA,EA+NA,OA/NA,EA+NA;AAAA;;AAAA,QAAA,aAAA,uEAAA,KAAA;;AACA,QAAA,aAAA,EAAA;AACA;AACA,UAAA,CAAA,KAAA,UAAA,EAAA;AACA,YAAA,UAAA,GAAA,IAAA,KAAA,CAAA,KAAA,EAAA;AACA,aAAA,UAAA,GAAA,UAAA;AACA,aAAA,aAAA,CAAA,OAAA,EAAA,KAAA,kBAAA;AACA,OAJA,MAIA;AACA,aAAA,UAAA,IAAA,KAAA,UAAA,CAAA,cAAA,EAAA;AACA,aAAA,aAAA,CAAA,OAAA,EAAA,IAAA,CAAA,YAAA;AACA,UAAA,MAAA,CAAA,iBAAA;AACA,SAFA;AAGA;;AACA,WAAA,kBAAA;AACA,WAAA,WAAA,GAAA,KAAA;AACA;AACA,GA/OA;AAgPA;AACA,EAAA,UAjPA,sBAiPA,CAjPA,EAiPA,CAjPA,EAiPA;AACA,SAAA,KAAA,CAAA,KAAA,CAAA,CAAA;AACA,SAAA,KAAA,CAAA,MAAA,CAAA,CAAA;AACA,GApPA;AAqPA;AACA,EAAA,kBAtPA,gCAsPA;AACA,QAAA,KAAA,aAAA,EAAA;AACA,WAAA,aAAA,CAAA,cAAA;AACA,WAAA,aAAA,CAAA,IAAA;AACA;AACA,GA3PA;AA4PA;AACA,EAAA,WA7PA,uBA6PA,KA7PA,EA6PA;AAAA;;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,uBAAA,EAAA,KAAA;AACA,QAAA,KAAA,GAAA,CAAA,CAAA,EAAA;AACA,QAAA,KAAA,WAAA,EAAA;AACA,QAAA,GAAA,GAAA,KAAA,SAAA,CAAA,KAAA,CAAA;;AACA,QAAA,CAAA,GAAA,EAAA;AACA,MAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA;AACA;;AACA,QAAA,OAAA;;AACA,QAAA,GAAA,IAAA,CAAA,GAAA,CAAA,QAAA,EAAA;AACA,WAAA,WAAA,GAAA,IAAA,CADA,CAEA;;AACA,MAAA,OAAA,GAAA,IAAA,IAAA,CACA;AACA,QAAA,GAAA,EAAA,KAAA,SAAA,CAAA,KAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA;AAAA,UAAA,KAAA,EAAA,KAAA,OAAA;AAAA,UAAA,MAAA,EAAA;AAAA;AAFA,OADA,EAKA;AAAA,eAAA,MAAA,CAAA,WAAA,CAAA,KAAA,EAAA,OAAA,EAAA,IAAA,CAAA;AAAA,OALA,CAAA;AAOA,MAAA,OAAA,CAAA,GAAA,CAAA,eAAA;AACA,WAAA,SAAA,GAAA,KAAA;AACA,WAAA,QAAA,GAAA,OAAA;AACA,WAAA,QAAA,CAAA,KAAA,SAAA,IAAA,OAAA;AACA,WAAA,IAAA,CACA,KAAA,SADA,EAEA,KAFA,EAGA,MAAA,CAAA,MAAA,CAAA,EAAA,oBAAA,KAAA,SAAA,CAAA,KAAA,CAAA,GAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA,CAHA;AAKA,KAnBA,MAmBA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,SAAA,GAAA,KAAA,CAFA,CAGA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,kBAAA;AACA,WAAA,QAAA,GAAA,KAAA,QAAA,CAAA,KAAA,SAAA,CAAA;AACA,UAAA,SAAA,GAAA,KAAA,QAAA,CAAA,YAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,SAAA;AACA,WAAA,kBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA;AACA;;AACA,SAAA,OAAA,CAAA,MAAA;AACA,SAAA,UAAA,CAAA,OAAA;AACA;AAtSA,CAAA;AAwSA,eAAA;AACA,EAAA,OAAA,EAAA,OADA;AAEA,EAAA,OAFA,qBAEA;AAAA,gCACA,KAAA,KAAA,CAAA,oBAAA,CAAA,qBAAA,EADA;AAAA,QACA,KADA,yBACA,KADA,EAEA;;;AACA,QAAA,KAAA,GAAA,IAAA,KAAA,CAAA,KAAA,CAAA;AACA,MAAA,SAAA,EAAA,cADA;AAEA,MAAA,MAAA,EAAA,CAFA;AAGA,MAAA,MAAA,EAAA,CAHA;AAIA,MAAA,eAAA,EAAA,IAJA;AAKA;AACA,MAAA,KAAA,EAAA,KANA;AAOA,MAAA,MAAA,EAAA,GAPA,CAQA;;AARA,KAAA,CAAA;AAWA,SAAA,OAAA,GAAA,KAAA;AACA,SAAA,KAAA,GAAA,KAAA,CAfA,CAiBA;;AACA,SAAA,UAAA,GAAA,IAAA,KAAA,CAAA,KAAA,CAAA;AACA,MAAA,EAAA,EAAA;AADA,KAAA,CAAA,CAlBA,CAsBA;;AACA,SAAA,aAAA,GAAA,IAAA,KAAA,CAAA,KAAA,CAAA;AACA,MAAA,EAAA,EAAA,iBADA;AAEA,MAAA,eAAA,EAAA;AAFA,KAAA,CAAA;AAKA,SAAA,KAAA,CAAA,GAAA,CAAA,KAAA,UAAA;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,KAAA,aAAA,EA7BA,CA+BA;AAEA;;AACA,SAAA,SAAA,GAAA,KAAA,SAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,aAAA;AACA,QAAA,QAAA,EAAA,KADA;AAEA,QAAA,GAAA,EAAA;AAFA,OAAA;AAIA,KALA,CAAA;AAMA,SAAA,MAAA,GAxCA,CAyCA;AACA;AAEA;AACA;AACA,GAhDA;AAiDA,EAAA,IAjDA,kBAiDA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,aAAA,EAAA,KAFA;AAGA,MAAA,QAAA,EAAA,GAHA;AAIA,MAAA,KAAA,EAAA,IAJA;AAKA,MAAA,MAAA,EAAA,IALA;AAMA,MAAA,SAAA,EAAA,SANA;AAOA,MAAA,SAAA,EAAA,CAAA,CAPA;AAQA,MAAA,QAAA,EAAA,IARA;AASA,MAAA,QAAA,EAAA,EATA;AAUA,MAAA,KAAA,EAAA;AAAA,QAAA,KAAA,EAAA,GAAA;AAAA,QAAA,MAAA,EAAA;AAAA,OAVA;AAWA,MAAA,aAAA,EAAA,IAXA;AAYA,MAAA,UAAA,EAAA,IAZA;AAaA,MAAA,WAAA,EAAA;AAbA,KAAA;AAeA,GAjEA;AAkEA,EAAA,UAAA,EAAA,CACA;AADA;AAlEA,CAAA","sourcesContent":["<template>\n  <div>\n    <div id=\"image-decorator-wrap\" ref=\"image_decorator_wrap\">\n      <div id=\"image-canvas\"></div>\n    </div>\n    <el-button size=\"mini\" @click=\"switchMode('brush')\">画笔模式</el-button>\n    <el-button size=\"mini\" @click=\"switchMode('eraser')\">橡皮擦模式</el-button>\n    <el-button size=\"mini\" @click=\"switchMode('moveobject')\"\n      >移动背景图片</el-button\n    >\n    <el-button size=\"mini\" @click=\"pre\">上一步</el-button>\n    <el-button size=\"mini\" @click=\"next\">下一步</el-button>\n    <el-button size=\"mini\" @click=\"switchMode('reset')\">重置</el-button>\n    <el-button size=\"mini\" @click=\"toDataUrl\">点我下载</el-button>\n    <el-button size=\"mini\" @click=\"toNext\">下一张</el-button>\n    <el-button size=\"mini\" @click=\"toPrev\">上一张</el-button>\n    <el-button size=\"mini\">{{ currIndex }}</el-button>\n    <el-button size=\"mini\" @click=\"setZoom('out')\">放大</el-button>\n    <el-button size=\"mini\" @click=\"setZoom('in')\">缩小</el-button>\n    <el-button size=\"mini\" @click=\"rotateTo('left')\">向左</el-button>\n    <el-button size=\"mini\" @click=\"rotateTo('right')\">向右</el-button>\n    <el-button size=\"mini\" @click=\"preview\">预览</el-el-button>\n  </div>\n</template>\n\n<script>\nimport Konva from \"konva\";\nimport {\n  imageList,\n  getBgImgXYOffset,\n  C_WIDTH,\n  C_HEIGHT,\n  rotateAroundCenter\n  // debounce\n} from \"../util.js\";\nimport Item from \"../Item.js\";\n// import MenuDraw from \"../menu/draw.vue\";\n\nconst methods = {\n  pre() {\n    const state = this.currItem.getPreHistory();\n    this.loadCanvasFromJSON(JSON.parse(state));\n  },\n  next() {\n    const state = this.currItem.getNextHistory();\n    this.loadCanvasFromJSON(JSON.parse(state));\n  },\n  preview() {\n    this.$emit(\"preview\");\n  },\n  // 切换图片复原操作\n  // 切换工具栏模式\n  switchMode(mode) {\n    this.mode = mode;\n    if (mode === \"brush\" || mode === \"eraser\") {\n      this.addEvent();\n      this.currItem.bgImg && this.currItem.bgImg.draggable(false);\n    }\n    if (mode === \"moveobject\") {\n      this.removeStageEvents();\n      this.setCursorStyle(\"pointer\");\n      this.currItem.bgImg.draggable(true);\n    }\n\n    if (mode === \"reset\") {\n      this.currItem.setRotate(0);\n      rotateAroundCenter(this.currItem.bgImg, 0);\n      let state = this.currItem.getOriginState();\n      this.loadCanvasFromJSON(JSON.parse(state));\n      this.currItem.clearHistorylist();\n      this.currItem.save(JSON.parse(state));\n      this.switchMode(\"brush\");\n    }\n  },\n  // 设置鼠标样式\n  setCursorStyle(type) {\n    switch (type) {\n      case \"pointer\":\n        document.body.style.cursor = \"pointer\";\n        break;\n      case \"default\":\n        document.body.style.cursor = \"pointer\";\n        break;\n      default:\n        document.body.style.cursor = \"pointer\";\n        break;\n    }\n  },\n  // 设置背景图片移动\n  moveBgImg() {\n    // console.log(\"this.stage\", this.stage, this.stage.listening);\n    // this.stage.listening(false);\n    // this.isMovingBgImg = true;\n    this.removeStageEvents();\n    this.currItem.bgImg.draggable(true);\n    this.setCursorStyle(\"pointer\");\n  },\n  // 旋转\n  rotateTo(type) {\n    // 旋转时 缩放属性为1\n    this.setZoom(\"noop\");\n    this.currItem.rotateTo(type);\n    this.removeStageEvents();\n    const { rotate } = this.currItem;\n    rotateAroundCenter(this.stage, rotate);\n    this.addEvent();\n    this.stage.batchDraw();\n  },\n  // 放大缩小\n  setZoom(type) {\n    let zoom;\n    if (type === \"noop\") {\n      zoom = 1;\n    } else {\n      zoom = this.stage.getAttr(\"scaleX\") || 1;\n      if (type == \"out\") {\n        // 放大\n        zoom = zoom + this.zoomStep;\n        zoom = Math.min(3, zoom); //最大是原来的3倍\n      }\n      if (type === \"in\") {\n        zoom = zoom - this.zoomStep;\n        zoom = Math.max(0.1, zoom); //最小为原来的1/10\n      }\n    }\n    this.stage.scale({\n      x: zoom,\n      y: zoom\n    });\n    this.stage.batchDraw();\n  },\n  // 移除stage事件监听\n  removeStageEvents() {\n    this.stage.off(\"mousedown\");\n    this.stage.off(\"mousemove\");\n    this.stage.off(\"mouseup\");\n  },\n\n  getRotatePoint(pos, oldScale) {\n    // stage整体旋转 获取点的方法也要更改\n    const { rotate } = this.currItem;\n    return rotate === 0\n      ? [\n          pos.x / oldScale - this.stage.x() / oldScale,\n          pos.y / oldScale - this.stage.y() / oldScale\n        ]\n      : rotate === 90 || rotate === -270\n      ? [\n          pos.y / oldScale - this.stage.y() / oldScale,\n          -pos.x / oldScale + this.stage.x() / oldScale\n        ]\n      : rotate === -90 || rotate === 270\n      ? [\n          -pos.y / oldScale + this.stage.y() / oldScale,\n          pos.x / oldScale - this.stage.x() / oldScale\n        ]\n      : rotate === 180 || rotate === -180\n      ? [\n          -pos.x / oldScale + this.stage.x() / oldScale,\n          -pos.y / oldScale + this.stage.y() / oldScale\n        ]\n      : null;\n  },\n  // 事件监听\n  addEvent() {\n    let isPaint = false;\n    let lastLine;\n    this.stage.on(\"mousedown\", () => {\n      isPaint = true;\n      let pos = this.stage.getPointerPosition();\n      // console.log(\"pos\", this.stage, pos);\n      let oldScale = this.stage.scaleX();\n      lastLine = new Konva.Line({\n        stroke: \"#df4b26\",\n        strokeWidth: 5,\n        globalCompositeOperation:\n          this.mode === \"brush\" ? \"source-over\" : \"destination-out\",\n        points: this.getRotatePoint(pos, oldScale)\n      });\n      this.freeDrawLayer.add(lastLine);\n    });\n    this.stage.on(\"mouseup\", () => {\n      isPaint = false;\n      this.saveCurrItemState();\n    });\n    this.stage.on(\"mousemove\", () => {\n      let oldScale = this.stage.scaleX();\n      if (!isPaint) {\n        return;\n      }\n      // 确保缩放功能能正常使用\n      const pos = this.stage.getPointerPosition();\n      let newPoints = lastLine\n        .points()\n        .concat(this.getRotatePoint(pos, oldScale));\n      lastLine.points(newPoints);\n      this.freeDrawLayer.batchDraw();\n    });\n  },\n  // 反序列化\n  loadCanvasFromJSON(state) {\n    if (!state) return;\n    this.stage = Konva.Node.create(state, \"image-canvas\");\n    // 添加背景图\n    // 背景图片不会保存在JSON对象里\n    this.bgImgLayer = this.stage.getLayers()[0];\n    this.bgImgLayer.add(this.currItem.bgImg);\n    this.bgImgLayer.batchDraw();\n    // this.bgImgLayer.batchDraw();\n    this.freeDrawLayer = this.stage.getLayers()[1];\n    this.freeDrawLayer.batchDraw();\n    this.isSwitching = false;\n  },\n  saveCurrItemState() {\n    if (!this.currItem) return;\n    let state = this.stage.toJSON();\n    this.currItem.save(state);\n  },\n  toNext() {\n    // this.saveCurrItemState();\n    this.switchImage(this.currIndex + 1);\n  },\n  toPrev() {\n    // this.saveCurrItemState();\n    this.switchImage(this.currIndex - 1);\n  },\n  toDataUrl() {\n    const imgUrl = this.stage.toDataURL({\n      x: 0,\n      y: 0,\n      width: C_WIDTH,\n      height: C_HEIGHT,\n      pixelRatio: 1 // 图片质量\n    });\n\n    this.$emit(\"emitLoadImg\", imgUrl);\n  },\n  // 加载背景图片\n  loadBackImage(itemObj) {\n    return new Promise((reslove) => {\n      const { imageInfo } = itemObj;\n      const { scale } = imageInfo;\n      Konva.Image.fromURL(itemObj.originUrl, (kImg) => {\n        kImg.setAttrs({\n          // 设置居中\n          x: getBgImgXYOffset(scale.width, null, this.C_WIDTH, 700),\n          y: getBgImgXYOffset(null, scale.height, this.C_WIDTH, 700),\n          id: \"bgImg\",\n          draggable: false,\n          source: itemObj.originUrl,\n          width: scale.width,\n          height: scale.height\n        });\n        this.bgImgLayer.add(kImg);\n        this.bgImgLayer.batchDraw();\n        this.currItem.bgImg = kImg;\n        reslove();\n      });\n    });\n  },\n\n  afterSwitch(index, itemObj, isFirstRender = false) {\n    if (isFirstRender) {\n      // 首次渲染;\n      if (!this.bgImgLayer) {\n        let bgImgLayer = new Konva.Layer();\n        this.bgImgLayer = bgImgLayer;\n        this.loadBackImage(itemObj, this.initFreeDrawCanvas);\n      } else {\n        this.bgImgLayer && this.bgImgLayer.removeChildren();\n        this.loadBackImage(itemObj).then(() => {\n          this.saveCurrItemState();\n        });\n      }\n      this.clearFreeDrawLayer();\n      this.isSwitching = false;\n    }\n  },\n  // 设置stage宽高\n  setStageWH(w, h) {\n    this.stage.width(w);\n    this.stage.height(h);\n  },\n  // 清除画笔层\n  clearFreeDrawLayer() {\n    if (this.freeDrawLayer) {\n      this.freeDrawLayer.removeChildren();\n      this.freeDrawLayer.draw();\n    }\n  },\n  // 切换图层\n  switchImage(index) {\n    console.log(\"=====switchImage=====\", index);\n    if (index < -1) return;\n    if (this.isSwitching) return;\n    let img = this.imageList[index];\n    if (!img) {\n      console.warn(\"图片不存在\");\n      return;\n    }\n    let itemObj;\n    if (img && !img.isRender) {\n      this.isSwitching = true;\n      // 首次渲染\n      itemObj = new Item(\n        {\n          url: this.imageList[index].url,\n          conWH: { width: this.C_WIDTH, height: 700 }\n        },\n        () => this.afterSwitch(index, itemObj, true)\n      );\n      console.log(\"====首次渲染=====\");\n      this.currIndex = index;\n      this.currItem = itemObj;\n      this.itemList[this.currIndex] = itemObj;\n      this.$set(\n        this.imageList,\n        index,\n        Object.assign({}, { ...this.imageList[index] }, { isRender: true })\n      );\n    } else {\n      this.isSwitching = true;\n      this.currIndex = index;\n      // 非首次渲染\n      console.log(\"======非首次渲染=====\");\n      this.currItem = this.itemList[this.currIndex];\n      let lastState = this.currItem.getLastState();\n      console.log(\"lastState\", lastState);\n      this.loadCanvasFromJSON(JSON.parse(lastState));\n    }\n    this.setZoom(\"noop\");\n    this.switchMode(\"brush\");\n  }\n};\nexport default {\n  methods,\n  mounted() {\n    const { width } = this.$refs.image_decorator_wrap.getBoundingClientRect();\n    // first we need Konva core things: stage and layer\n    let stage = new Konva.Stage({\n      container: \"image-canvas\",\n      scaleY: 1,\n      scaleX: 1,\n      centeredScaling: true,\n      // 确定了canvas的宽高\n      width,\n      height: 700\n      // draggable: true\n    });\n\n    this.C_WIDTH = width;\n    this.stage = stage;\n\n    // 背景层\n    this.bgImgLayer = new Konva.Layer({\n      id: \"bg_image_layer\"\n    });\n\n    // 绘画层\n    this.freeDrawLayer = new Konva.Layer({\n      id: \"free_draw_layer\",\n      backgroundColor: \"red\"\n    });\n\n    this.stage.add(this.bgImgLayer);\n    this.stage.add(this.freeDrawLayer);\n\n    // this.addEvent();\n\n    // 组装数据格式\n    this.imageList = this.imageList.map((d) => {\n      return {\n        isRender: false,\n        url: d\n      };\n    });\n    this.toNext();\n    // this.initFreeDrawCanvas();\n    // this.();\n\n    // 初始化时候需要异步\n    // setTimeout(() => {}, 100);\n  },\n  data() {\n    return {\n      mode: null,\n      isMovingBgImg: false,\n      zoomStep: 0.1,\n      stage: null,\n      imgUrl: null,\n      imageList: imageList,\n      currIndex: -1,\n      currItem: null,\n      itemList: [],\n      conWH: { width: 800, height: 600 },\n      freeDrawLayer: null,\n      bgImgLayer: null,\n      isSwitching: false\n    };\n  },\n  components: {\n    // MenuDraw\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n#image-decorator-wrap {\n  // border: 1px solid red;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n  overflow: hidden;\n  background: #fff;\n}\n#menu {\n  background: red;\n  width: 100%;\n  height: 50px;\n}\n</style>\n"],"sourceRoot":"src/page/Konva"}]}