{"remainingRequest":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/babel-loader/lib/index.js!/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haopeiwei/Documents/hpw/web-board/konva-board/src/page/konva.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/src/page/konva.vue","mtime":1612177642865},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/cache-loader/dist/cjs.js","mtime":1591588454175},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/babel-loader/lib/index.js","mtime":1591149279866},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/cache-loader/dist/cjs.js","mtime":1591588454175},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/vue-loader/lib/index.js","mtime":1592981491866}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwudG8tanNvbiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBLb252YSBmcm9tICJrb252YSI7CmltcG9ydCB7IGltYWdlTGlzdCB9IGZyb20gIi4vdXRpbC5qcyI7CmltcG9ydCBJdGVtIGZyb20gIi4vSXRlbS5qcyI7CnZhciBDX1dJRFRIID0gODAwOwp2YXIgQ19IRUlHSFQgPSA2MDA7CnZhciBtZXRob2RzID0gewogIC8vIOWIh+aNouW3peWFt+agj+aooeW8jwogIHN3aXRjaE1vZGU6IGZ1bmN0aW9uIHN3aXRjaE1vZGUobW9kZSkgewogICAgdGhpcy5tb2RlID0gbW9kZTsKCiAgICBpZiAobW9kZSA9PT0gImJydXNoIiB8fCBtb2RlID09PSAiZXJhc2VyIikgewogICAgICB0aGlzLmFkZEV2ZW50KCk7CiAgICAgIHRoaXMuY3Vyckl0ZW0uYmdJbWcuZHJhZ2dhYmxlKGZhbHNlKTsKICAgIH0KCiAgICBpZiAobW9kZSA9PT0gIm1vdmVvYmplY3QiKSB7CiAgICAgIHRoaXMucmVtb3ZlU3RhZ2VFdmVudHMoKTsKICAgICAgdGhpcy5zZXRDdXJzb3JTdHlsZSgicG9pbnRlciIpOwogICAgICB0aGlzLmN1cnJJdGVtLmJnSW1nLmRyYWdnYWJsZSh0cnVlKTsKICAgIH0KCiAgICBpZiAobW9kZSA9PT0gInJlc2V0IikgewogICAgICB0aGlzLnN0YWdlLmNsZWFyKCk7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuY3VyckluZGV4KTsKICAgICAgdGhpcy5zd2l0Y2hJbWFnZSgwKTsKICAgIH0KICB9LAogIC8vIOiuvue9rum8oOagh+agt+W8jwogIHNldEN1cnNvclN0eWxlOiBmdW5jdGlvbiBzZXRDdXJzb3JTdHlsZSh0eXBlKSB7CiAgICBzd2l0Y2ggKHR5cGUpIHsKICAgICAgY2FzZSAicG9pbnRlciI6CiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5jdXJzb3IgPSAicG9pbnRlciI7CiAgICAgICAgYnJlYWs7CgogICAgICBjYXNlICJkZWZhdWx0IjoKICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLmN1cnNvciA9ICJwb2ludGVyIjsKICAgICAgICBicmVhazsKCiAgICAgIGRlZmF1bHQ6CiAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5jdXJzb3IgPSAicG9pbnRlciI7CiAgICAgICAgYnJlYWs7CiAgICB9CiAgfSwKICAvLyDorr7nva7og4zmma/lm77niYfnp7vliqgKICBtb3ZlQmdJbWc6IGZ1bmN0aW9uIG1vdmVCZ0ltZygpIHsKICAgIC8vIGNvbnNvbGUubG9nKCJ0aGlzLnN0YWdlIiwgdGhpcy5zdGFnZSwgdGhpcy5zdGFnZS5saXN0ZW5pbmcpOwogICAgLy8gdGhpcy5zdGFnZS5saXN0ZW5pbmcoZmFsc2UpOwogICAgLy8gdGhpcy5pc01vdmluZ0JnSW1nID0gdHJ1ZTsKICAgIHRoaXMucmVtb3ZlU3RhZ2VFdmVudHMoKTsKICAgIHRoaXMuY3Vyckl0ZW0uYmdJbWcuZHJhZ2dhYmxlKHRydWUpOwogICAgdGhpcy5zZXRDdXJzb3JTdHlsZSgicG9pbnRlciIpOwogIH0sCiAgLy8g5peL6L2sCiAgcm90YXRlVG86IGZ1bmN0aW9uIHJvdGF0ZVRvKHR5cGUpIHsKICAgIGlmICh0eXBlID09PSAibGVmdCIpIHsKICAgICAgdGhpcy5zdGFnZS5yb3RhdGlvbigtOTApOwogICAgfQoKICAgIGlmICh0eXBlID09PSAicmlnaHQiKSB7CiAgICAgIHRoaXMuc3RhZ2Uucm90YXRpb24oOTApOwogICAgfQoKICAgIHRoaXMuc3RhZ2UuYmF0Y2hEcmF3KCk7CiAgfSwKICAvLyDmlL7lpKcKICBzZXRab29tOiBmdW5jdGlvbiBzZXRab29tKHR5cGUpIHsKICAgIGNvbnNvbGUubG9nKCJkYXNkYWRhIiwgdGhpcy5iZ0ltZ0xheWVyLCB0aGlzLnN0YWdlLmdldEF0dHIoInNjYWxlWCIpKTsKICAgIHZhciB6b29tID0gdGhpcy5zdGFnZS5nZXRBdHRyKCJzY2FsZVgiKSB8fCAxOwoKICAgIGlmICh0eXBlID09ICJvdXQiKSB7CiAgICAgIC8vIOaUvuWkpwogICAgICB6b29tID0gem9vbSArIHRoaXMuem9vbVN0ZXA7CiAgICAgIHpvb20gPSBNYXRoLm1pbigzLCB6b29tKTsgLy/mnIDlpKfmmK/ljp/mnaXnmoQz5YCNCiAgICB9CgogICAgaWYgKHR5cGUgPT09ICJpbiIpIHsKICAgICAgem9vbSA9IHpvb20gLSB0aGlzLnpvb21TdGVwOwogICAgICB6b29tID0gTWF0aC5tYXgoMC4xLCB6b29tKTsgLy/mnIDlsI/kuLrljp/mnaXnmoQxLzEwCiAgICB9CgogICAgdGhpcy5zdGFnZS5zY2FsZSh7CiAgICAgIHg6IHpvb20sCiAgICAgIHk6IHpvb20KICAgIH0pOwogICAgdGhpcy5zdGFnZS5iYXRjaERyYXcoKTsKICB9LAogIC8vIOenu+mZpHN0YWdl5LqL5Lu255uR5ZCsCiAgcmVtb3ZlU3RhZ2VFdmVudHM6IGZ1bmN0aW9uIHJlbW92ZVN0YWdlRXZlbnRzKCkgewogICAgdGhpcy5zdGFnZS5vZmYoIm1vdXNlZG93biIpOwogICAgdGhpcy5zdGFnZS5vZmYoIm1vdXNlbW92ZSIpOwogICAgdGhpcy5zdGFnZS5vZmYoIm1vdXNldXAiKTsKICB9LAogIC8vIOS6i+S7tuebkeWQrAogIGFkZEV2ZW50OiBmdW5jdGlvbiBhZGRFdmVudCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgLy8gaWYgKHRoaXMuaXNNb3ZpbmdCZ0ltZykgcmV0dXJuOwogICAgLy8gY29uc29sZS5sb2coImFkZEV2ZW50Iik7CiAgICB2YXIgaXNQYWludCA9IGZhbHNlOwogICAgdmFyIGxhc3RMaW5lOwogICAgdGhpcy5zdGFnZS5vbigibW91c2Vkb3duIiwgZnVuY3Rpb24gKCkgewogICAgICBjb25zb2xlLmxvZygiYSIpOwogICAgICBpc1BhaW50ID0gdHJ1ZTsKCiAgICAgIHZhciBwb3MgPSBfdGhpcy5zdGFnZS5nZXRQb2ludGVyUG9zaXRpb24oKTsKCiAgICAgIHZhciBvbGRTY2FsZSA9IF90aGlzLnN0YWdlLnNjYWxlWCgpOwoKICAgICAgbGFzdExpbmUgPSBuZXcgS29udmEuTGluZSh7CiAgICAgICAgc3Ryb2tlOiAiI2RmNGIyNiIsCiAgICAgICAgc3Ryb2tlV2lkdGg6IDUsCiAgICAgICAgZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uOiBfdGhpcy5tb2RlID09PSAiYnJ1c2giID8gInNvdXJjZS1vdmVyIiA6ICJkZXN0aW5hdGlvbi1vdXQiLAogICAgICAgIHBvaW50czogW3Bvcy54IC8gb2xkU2NhbGUgLSBfdGhpcy5zdGFnZS54KCkgLyBvbGRTY2FsZSwgcG9zLnkgLyBvbGRTY2FsZSAtIF90aGlzLnN0YWdlLnkoKSAvIG9sZFNjYWxlXQogICAgICB9KTsKCiAgICAgIF90aGlzLmZyZWVEcmF3TGF5ZXIuYWRkKGxhc3RMaW5lKTsKICAgIH0pOwogICAgdGhpcy5zdGFnZS5vbigibW91c2V1cCIsIGZ1bmN0aW9uICgpIHsKICAgICAgaXNQYWludCA9IGZhbHNlOwogICAgfSk7CiAgICB0aGlzLnN0YWdlLm9uKCJtb3VzZW1vdmUiLCBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBvbGRTY2FsZSA9IF90aGlzLnN0YWdlLnNjYWxlWCgpOwoKICAgICAgaWYgKCFpc1BhaW50KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgcG9zID0gX3RoaXMuc3RhZ2UuZ2V0UG9pbnRlclBvc2l0aW9uKCk7CgogICAgICB2YXIgbmV3UG9pbnRzID0gbGFzdExpbmUucG9pbnRzKCkuY29uY2F0KFtwb3MueCAvIG9sZFNjYWxlIC0gX3RoaXMuc3RhZ2UueCgpIC8gb2xkU2NhbGUsIHBvcy55IC8gb2xkU2NhbGUgLSBfdGhpcy5zdGFnZS55KCkgLyBvbGRTY2FsZV0pOwogICAgICBsYXN0TGluZS5wb2ludHMobmV3UG9pbnRzKTsKCiAgICAgIF90aGlzLmZyZWVEcmF3TGF5ZXIuYmF0Y2hEcmF3KCk7CiAgICB9KTsgLy8gbGV0IHNlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0b29sIik7CiAgICAvLyBzZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlIiwgZnVuY3Rpb24oKSB7CiAgICAvLyAgIG1vZGUgPSBzZWxlY3QudmFsdWU7CiAgICAvLyB9KTsKICB9LAogIC8vIOWPjeW6j+WIl+WMlgogIGxvYWRDYW52YXNGcm9tSlNPTjogZnVuY3Rpb24gbG9hZENhbnZhc0Zyb21KU09OKHN0YXRlKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICBpZiAoIXN0YXRlKSByZXR1cm47CiAgICB0aGlzLnN0YWdlID0gS29udmEuTm9kZS5jcmVhdGUoSlNPTi5wYXJzZShzdGF0ZSksICJpbWFnZS1jYW52YXMiKTsgLy8g5re75Yqg6IOM5pmv5Zu+CgogICAgdGhpcy5zdGFnZS5maW5kKCIjYmdJbWciKS5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgIHZhciBpbWcgPSBuZXcgSW1hZ2UoKTsKICAgICAgaW1nLnNyYyA9IG5vZGUuZ2V0QXR0cigic291cmNlIik7CgogICAgICBpbWcub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICAgIG5vZGUuaW1hZ2UoaW1nKTsKCiAgICAgICAgX3RoaXMyLnN0YWdlLmJhdGNoRHJhdygpOwogICAgICB9OwogICAgfSk7IC8vIHRoaXMuc3RhZ2UuZmluZE9uZSgiI2JnSW1nIikKCiAgICB0aGlzLmZyZWVEcmF3TGF5ZXIgPSB0aGlzLnN0YWdlLmdldExheWVycygpWzFdOwogICAgdGhpcy5hZGRFdmVudCgpOwogICAgdGhpcy5mcmVlRHJhd0xheWVyLmJhdGNoRHJhdygpOwogICAgdGhpcy5pc1N3aXRjaGluZyA9IGZhbHNlOyAvLyDnlLvnrJTlsYIKICAgIC8vIGxldCBjb25zdDEgPSB0aGlzLnN0YWdlLmZpbmQoIiNmcmVlX2RyYXdfY2FudmFzIik7CiAgICAvLyB0aGlzLmFkZEV2ZW50KCk7CiAgfSwKICBzYXZlQ3Vyckl0ZW1TdGF0ZTogZnVuY3Rpb24gc2F2ZUN1cnJJdGVtU3RhdGUoKSB7CiAgICBpZiAoIXRoaXMuY3Vyckl0ZW0pIHJldHVybjsKICAgIHZhciBzdGF0ZSA9IHRoaXMuc3RhZ2UudG9KU09OKCk7CiAgICB0aGlzLmN1cnJJdGVtLnNhdmUoc3RhdGUpOwogIH0sCiAgdG9OZXh0OiBmdW5jdGlvbiB0b05leHQoKSB7CiAgICB0aGlzLnNhdmVDdXJySXRlbVN0YXRlKCk7CiAgICB0aGlzLnN3aXRjaEltYWdlKHRoaXMuY3VyckluZGV4ICsgMSk7CiAgfSwKICB0b1ByZXY6IGZ1bmN0aW9uIHRvUHJldigpIHsKICAgIHRoaXMuc2F2ZUN1cnJJdGVtU3RhdGUoKTsKICAgIHRoaXMuc3dpdGNoSW1hZ2UodGhpcy5jdXJySW5kZXggLSAxKTsKICB9LAogIHRvRGF0YVVybDogZnVuY3Rpb24gdG9EYXRhVXJsKCkgewogICAgdGhpcy5pbWdVcmwgPSB0aGlzLnN0YWdlLnRvRGF0YVVSTCh7CiAgICAgIHg6IDAsCiAgICAgIHk6IDAsCiAgICAgIHdpZHRoOiA2MDAsCiAgICAgIGhlaWdodDogNDAwLAogICAgICBwaXhlbFJhdGlvOiAzCiAgICB9KTsKICB9LAogIC8vIOWKoOi9veiDjOaZr+WbvueJhwogIGxvYWRCYWNrSW1hZ2U6IGZ1bmN0aW9uIGxvYWRCYWNrSW1hZ2UoaXRlbU9iaiwgY2IpIHsKICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgIHZhciBpbWFnZUluZm8gPSBpdGVtT2JqLmltYWdlSW5mbzsKICAgIHZhciBzY2FsZSA9IGltYWdlSW5mby5zY2FsZTsKICAgIEtvbnZhLkltYWdlLmZyb21VUkwoaXRlbU9iai5vcmlnaW5VcmwsIGZ1bmN0aW9uIChrSW1nKSB7CiAgICAgIGtJbWcuc2V0QXR0cnMoewogICAgICAgIC8vIOiuvue9ruWxheS4rQogICAgICAgIHg6IF90aGlzMy5nZXRCZ0ltZ1hZT2Zmc2V0KHNjYWxlLndpZHRoLCBudWxsKSwKICAgICAgICB5OiBfdGhpczMuZ2V0QmdJbWdYWU9mZnNldChudWxsLCBzY2FsZS5oZWlnaHQpLAogICAgICAgIGlkOiAiYmdJbWciLAogICAgICAgIHNvdXJjZTogaXRlbU9iai5vcmlnaW5VcmwsCiAgICAgICAgZHJhZ2dhYmxlOiBmYWxzZSwKICAgICAgICB3aWR0aDogc2NhbGUud2lkdGgsCiAgICAgICAgaGVpZ2h0OiBzY2FsZS5oZWlnaHQKICAgICAgfSk7CgogICAgICBfdGhpczMuYmdJbWdMYXllci5hZGQoa0ltZyk7CgogICAgICBfdGhpczMuYmdJbWdMYXllci5iYXRjaERyYXcoKTsgLy8g5L+d5a2Y5b2T5YmN6IOM5pmv5a+56LGhCgoKICAgICAgX3RoaXMzLmN1cnJJdGVtLmJnSW1nID0ga0ltZzsKICAgICAgY2IgJiYgY2IoKTsKICAgIH0pOwogIH0sCiAgLy8g6I635Y+W6IOM5pmv5Zu+54mHeHnlgY/np7vph48KICBnZXRCZ0ltZ1hZT2Zmc2V0OiBmdW5jdGlvbiBnZXRCZ0ltZ1hZT2Zmc2V0KHdpZHRoLCBoZWlnaHQpIHsKICAgIGlmICh3aWR0aCkgewogICAgICByZXR1cm4gQ19XSURUSCA+IHdpZHRoID8gKENfV0lEVEggLSB3aWR0aCkgLyAyIDogMDsKICAgIH0KCiAgICBpZiAoaGVpZ2h0KSB7CiAgICAgIHJldHVybiBDX0hFSUdIVCA+IGhlaWdodCA/IChDX0hFSUdIVCAtIGhlaWdodCkgLyAyIDogMDsKICAgIH0KICB9LAogIGFmdGVyU3dpdGNoOiBmdW5jdGlvbiBhZnRlclN3aXRjaChpbmRleCwgaXRlbU9iaikgewogICAgdmFyIGlzRmlyc3RSZW5kZXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IGZhbHNlOwoKICAgIGlmIChpc0ZpcnN0UmVuZGVyKSB7CiAgICAgIC8vIOmmluasoea4suafkzsKICAgICAgaWYgKCF0aGlzLmJnSW1nTGF5ZXIpIHsKICAgICAgICB2YXIgYmdJbWdMYXllciA9IG5ldyBLb252YS5MYXllcigpOwogICAgICAgIHRoaXMuYmdJbWdMYXllciA9IGJnSW1nTGF5ZXI7CiAgICAgICAgdGhpcy5sb2FkQmFja0ltYWdlKGl0ZW1PYmosIHRoaXMuaW5pdEZyZWVEcmF3Q2FudmFzKTsKICAgICAgICB0aGlzLnN0YWdlLmFkZChiZ0ltZ0xheWVyKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmJnSW1nTGF5ZXIgJiYgdGhpcy5iZ0ltZ0xheWVyLnJlbW92ZUNoaWxkcmVuKCk7CiAgICAgICAgdGhpcy5sb2FkQmFja0ltYWdlKGl0ZW1PYmopOwogICAgICB9CgogICAgICB0aGlzLmNsZWFyRnJlZURyYXdMYXllcigpOwogICAgICB0aGlzLmlzU3dpdGNoaW5nID0gZmFsc2U7CiAgICB9CiAgfSwKICAvLyDorr7nva5zdGFnZeWuvemrmAogIHNldFN0YWdlV0g6IGZ1bmN0aW9uIHNldFN0YWdlV0godywgaCkgewogICAgdGhpcy5zdGFnZS53aWR0aCh3KTsKICAgIHRoaXMuc3RhZ2UuaGVpZ2h0KGgpOwogIH0sCiAgLy8g5riF6Zmk55S756yU5bGCCiAgY2xlYXJGcmVlRHJhd0xheWVyOiBmdW5jdGlvbiBjbGVhckZyZWVEcmF3TGF5ZXIoKSB7CiAgICBpZiAodGhpcy5mcmVlRHJhd0xheWVyKSB7CiAgICAgIHRoaXMuZnJlZURyYXdMYXllci5yZW1vdmVDaGlsZHJlbigpOwogICAgICB0aGlzLmZyZWVEcmF3TGF5ZXIuZHJhdygpOwogICAgfQogIH0sCiAgLy8g5YiH5o2i5Zu+5bGCCiAgc3dpdGNoSW1hZ2U6IGZ1bmN0aW9uIHN3aXRjaEltYWdlKGluZGV4KSB7CiAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICBjb25zb2xlLmxvZygiPT09PT1zd2l0Y2hJbWFnZT09PT09IiwgaW5kZXgpOwogICAgaWYgKGluZGV4IDwgLTEpIHJldHVybjsKICAgIGlmICh0aGlzLmlzU3dpdGNoaW5nKSByZXR1cm47CiAgICB2YXIgaW1nID0gdGhpcy5pbWFnZUxpc3RbaW5kZXhdOwogICAgaWYgKCFpbWcpIHJldHVybjsKICAgIHZhciBpdGVtT2JqOwoKICAgIGlmIChpbWcgJiYgIWltZy5pc1JlbmRlcikgewogICAgICB0aGlzLmlzU3dpdGNoaW5nID0gdHJ1ZTsKICAgICAgY29uc29sZS5sb2coIummluasoea4suafkyIpOyAvLyDpppbmrKHmuLLmn5MKCiAgICAgIGl0ZW1PYmogPSBuZXcgSXRlbSh7CiAgICAgICAgdXJsOiB0aGlzLmltYWdlTGlzdFtpbmRleF0udXJsLAogICAgICAgIGNvbldIOiB7CiAgICAgICAgICB3aWR0aDogODAwLAogICAgICAgICAgaGVpZ2h0OiA2MDAKICAgICAgICB9CiAgICAgIH0sIGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXM0LmFmdGVyU3dpdGNoKGluZGV4LCBpdGVtT2JqLCB0cnVlKTsKICAgICAgfSk7CiAgICAgIHRoaXMuY3VyckluZGV4ID0gaW5kZXg7CiAgICAgIHRoaXMuY3Vyckl0ZW0gPSBpdGVtT2JqOwogICAgICB0aGlzLml0ZW1MaXN0W3RoaXMuY3VyckluZGV4XSA9IGl0ZW1PYmo7CiAgICAgIHRoaXMuaW1hZ2VMaXN0W3RoaXMuY3VyckluZGV4XS5pc1JlbmRlciA9IHRydWU7CiAgICB9IGVsc2UgewogICAgICB0aGlzLmlzU3dpdGNoaW5nID0gdHJ1ZTsKICAgICAgdGhpcy5jdXJySW5kZXggPSBpbmRleDsgLy8g6Z2e6aaW5qyh5riy5p+TCgogICAgICBjb25zb2xlLmxvZygiPT09PT096Z2e6aaW5qyh5riy5p+TPT09PT0iLCB0aGlzLmN1cnJJbmRleCk7CiAgICAgIGNvbnNvbGUubG9nKCJ0aGlzLml0ZW1MaXN0W3RoaXMuY3VyckluZGV4XSIsIHRoaXMuaXRlbUxpc3RbdGhpcy5jdXJySW5kZXhdKTsKICAgICAgdGhpcy5jdXJySXRlbSA9IHRoaXMuaXRlbUxpc3RbdGhpcy5jdXJySW5kZXhdOwogICAgICBjb25zb2xlLmxvZygiIHRoaXMuY3Vyckl0ZW0iLCB0aGlzLmN1cnJJdGVtKTsKICAgICAgdmFyIGN1cnJTdGF0ZSA9IHRoaXMuY3Vyckl0ZW0uZ2V0Q3VyclN0YXRlKCk7CiAgICAgIGNvbnNvbGUubG9nKCJjdXJyU3RhdGUiLCBjdXJyU3RhdGUpOwogICAgICB0aGlzLmxvYWRDYW52YXNGcm9tSlNPTihKU09OLnBhcnNlKGN1cnJTdGF0ZSkpOyAvLyB0aGlzLmxvYWRCYWNrSW1hZ2UodGhpcy5jdXJySXRlbSk7CiAgICAgIC8vIHRoaXMuc3RhZ2UgPSBLb252YS5Ob2RlLmNyZWF0ZShKU09OLnBhcnNlKGN1cnJTdGF0ZSksICJpbWFnZS1jYW52YXMiKTsKICAgICAgLy8gLy8gdGhpcy5zdGFnZS5maW5kKCIjYmdJbWciKS4KICAgICAgLy8gbGV0IGltYWdlID0gbmV3IEltYWdlKCk7CiAgICAgIC8vIGltYWdlLm9ubG9hZCA9ICgpID0+IHsKICAgICAgLy8gICB0aGlzLnN0YWdlLmZpbmQoIiNiZ0ltZyIpWzBdLmltYWdlKGltYWdlKTsKICAgICAgLy8gICB0aGlzLnN0YWdlLmRyYXcoKTsKICAgICAgLy8gfTsKICAgICAgLy8gaW1hZ2Uuc3JjID0gdGhpcy5jdXJySXRlbS5vcmlnaW5Vcmw7CiAgICAgIC8vIHRoaXMuc3RhZ2UuZmluZCgiI2ZyZWVfZHJhd19jYW52YXMiKQogICAgICAvLyB0aGlzLmZyZWVEcmF3TGF5ZXIuYmF0Y2hEcmF3KCk7CiAgICAgIC8vIHRoaXMuc3RhZ2UuYmF0Y2hEcmF3KCk7CiAgICAgIC8vIHRoaXMuc3RhZ2UuZm9yRWFjaCgoZCkgPT4gewogICAgICAvLyAgIGNvbnNvbGUubG9nKCJkIiwgZCk7CiAgICAgIC8vIH0pOwogICAgICAvLyB0aGlzLmJnSW1nTGF5ZXIuYmF0Y2hEcmF3KCk7CiAgICAgIC8vIHRoaXMuaW5pdEZyZWVEcmF3Q2FudmFzKCk7CiAgICAgIC8vIHRoaXMuZnJlZURyYXdMYXllci5iYXRjaERyYXcoKTsKICAgICAgLy8gdGhpcy5mcmVlRHJhd0xheWVyLnpJbmRleCg5OSk7CiAgICB9CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbWV0aG9kczogbWV0aG9kcywKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgLy8gZmlyc3Qgd2UgbmVlZCBLb252YSBjb3JlIHRoaW5nczogc3RhZ2UgYW5kIGxheWVyCiAgICB2YXIgc3RhZ2UgPSBuZXcgS29udmEuU3RhZ2UoewogICAgICBjb250YWluZXI6ICJpbWFnZS1jYW52YXMiLAogICAgICBzY2FsZVk6IDEsCiAgICAgIHNjYWxlWDogMSwKICAgICAgY2VudGVyZWRTY2FsaW5nOiB0cnVlLAogICAgICAvLyDnoa7lrprkuoZjYW52YXPnmoTlrr3pq5gKICAgICAgd2lkdGg6IDgwMCwKICAgICAgaGVpZ2h0OiA2MDAKICAgIH0pOwogICAgdGhpcy5zdGFnZSA9IHN0YWdlOyAvLyDog4zmma/lsYIKCiAgICB0aGlzLmJnSW1nTGF5ZXIgPSBuZXcgS29udmEuTGF5ZXIoewogICAgICBpZDogImJnX2ltYWdlX2xheWVyIgogICAgfSk7IC8vIOe7mOeUu+WxggoKICAgIHRoaXMuZnJlZURyYXdMYXllciA9IG5ldyBLb252YS5MYXllcih7CiAgICAgIGlkOiAiZnJlZV9kcmF3X2xheWVyIiwKICAgICAgYmFja2dyb3VuZENvbG9yOiAicmVkIgogICAgfSk7CiAgICB0aGlzLnN0YWdlLmFkZCh0aGlzLmJnSW1nTGF5ZXIpOwogICAgdGhpcy5zdGFnZS5hZGQodGhpcy5mcmVlRHJhd0xheWVyKTsKICAgIHRoaXMuYWRkRXZlbnQoKTsgLy8g57uE6KOF5pWw5o2u5qC85byPCgogICAgdGhpcy5pbWFnZUxpc3QgPSB0aGlzLmltYWdlTGlzdC5tYXAoZnVuY3Rpb24gKGQpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBpc1JlbmRlcjogZmFsc2UsCiAgICAgICAgdXJsOiBkCiAgICAgIH07CiAgICB9KTsKICAgIHRoaXMudG9OZXh0KCk7IC8vIHRoaXMuaW5pdEZyZWVEcmF3Q2FudmFzKCk7CiAgICAvLyB0aGlzLigpOwogICAgLy8g5Yid5aeL5YyW5pe25YCZ6ZyA6KaB5byC5q2lCiAgICAvLyBzZXRUaW1lb3V0KCgpID0+IHt9LCAxMDApOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1vZGU6ICJicnVzaCIsCiAgICAgIGlzTW92aW5nQmdJbWc6IGZhbHNlLAogICAgICB6b29tU3RlcDogMC4xLAogICAgICBzdGFnZTogbnVsbCwKICAgICAgaW1nVXJsOiBudWxsLAogICAgICBpbWFnZUxpc3Q6IGltYWdlTGlzdCwKICAgICAgY3VyckluZGV4OiAtMSwKICAgICAgY3Vyckl0ZW06IG51bGwsCiAgICAgIGl0ZW1MaXN0OiBbXSwKICAgICAgY29uV0g6IHsKICAgICAgICB3aWR0aDogODAwLAogICAgICAgIGhlaWdodDogNjAwCiAgICAgIH0sCiAgICAgIGZyZWVEcmF3TGF5ZXI6IG51bGwsCiAgICAgIGJnSW1nTGF5ZXI6IG51bGwsCiAgICAgIGlzU3dpdGNoaW5nOiBmYWxzZQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHt9Cn07"},{"version":3,"sources":["konva.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div id=\"image-decorator-wrap\">\n      <div id=\"image-canvas\"></div>\n    </div>\n\n    <select id=\"tool\">\n      <option value=\"brush\">Brush</option>\n      <option value=\"eraser\">Eraser</option>\n    </select>\n    <button @click=\"switchMode('brush')\">画笔模式</button>\n    <button @click=\"switchMode('eraser')\">橡皮擦模式</button>\n    <button @click=\"switchMode('moveobject')\">移动背景图片</button>\n    <button @click=\"switchMode('reset')\">重置</button>\n    <img :src=\"imgUrl\" class=\"img\" />\n    <button @click=\"toDataUrl\">点我下载</button>\n    <button @click=\"toNext\">下一张</button>\n    <button @click=\"toPrev\">上一张</button>\n    <button>{{ currIndex }}</button>\n    <button @click=\"setZoom('out')\">放大</button>\n    <button @click=\"setZoom('in')\">缩小</button>\n    <button @click=\"rotateTo('left')\">向左</button>\n    <button @click=\"rotateTo('right')\">向右</button>\n  </div>\n</template>\n\n<script>\nimport Konva from \"konva\";\nimport { imageList } from \"./util.js\";\nimport Item from \"./Item.js\";\n\nconst C_WIDTH = 800;\nconst C_HEIGHT = 600;\nconst methods = {\n  // 切换工具栏模式\n  switchMode(mode) {\n    this.mode = mode;\n    if (mode === \"brush\" || mode === \"eraser\") {\n      this.addEvent();\n      this.currItem.bgImg.draggable(false);\n    }\n    if (mode === \"moveobject\") {\n      this.removeStageEvents();\n      this.setCursorStyle(\"pointer\");\n      this.currItem.bgImg.draggable(true);\n    }\n\n    if (mode === \"reset\") {\n      this.stage.clear();\n      console.log(this.currIndex);\n      this.switchImage(0);\n    }\n  },\n  // 设置鼠标样式\n  setCursorStyle(type) {\n    switch (type) {\n      case \"pointer\":\n        document.body.style.cursor = \"pointer\";\n        break;\n      case \"default\":\n        document.body.style.cursor = \"pointer\";\n        break;\n      default:\n        document.body.style.cursor = \"pointer\";\n        break;\n    }\n  },\n  // 设置背景图片移动\n  moveBgImg() {\n    // console.log(\"this.stage\", this.stage, this.stage.listening);\n    // this.stage.listening(false);\n    // this.isMovingBgImg = true;\n    this.removeStageEvents();\n    this.currItem.bgImg.draggable(true);\n    this.setCursorStyle(\"pointer\");\n  },\n  // 旋转\n  rotateTo(type) {\n    if (type === \"left\") {\n      this.stage.rotation(-90);\n    }\n    if (type === \"right\") {\n      this.stage.rotation(90);\n    }\n    this.stage.batchDraw();\n  },\n  // 放大\n  setZoom(type) {\n    console.log(\"dasdada\", this.bgImgLayer, this.stage.getAttr(\"scaleX\"));\n    let zoom = this.stage.getAttr(\"scaleX\") || 1;\n    if (type == \"out\") {\n      // 放大\n      zoom = zoom + this.zoomStep;\n      zoom = Math.min(3, zoom); //最大是原来的3倍\n    }\n    if (type === \"in\") {\n      zoom = zoom - this.zoomStep;\n      zoom = Math.max(0.1, zoom); //最小为原来的1/10\n    }\n    this.stage.scale({\n      x: zoom,\n      y: zoom\n    });\n    this.stage.batchDraw();\n  },\n  // 移除stage事件监听\n  removeStageEvents() {\n    this.stage.off(\"mousedown\");\n    this.stage.off(\"mousemove\");\n    this.stage.off(\"mouseup\");\n  },\n  // 事件监听\n  addEvent() {\n    // if (this.isMovingBgImg) return;\n    // console.log(\"addEvent\");\n    let isPaint = false;\n    let lastLine;\n    this.stage.on(\"mousedown\", () => {\n      console.log(\"a\");\n      isPaint = true;\n      let pos = this.stage.getPointerPosition();\n      let oldScale = this.stage.scaleX();\n      lastLine = new Konva.Line({\n        stroke: \"#df4b26\",\n        strokeWidth: 5,\n        globalCompositeOperation:\n          this.mode === \"brush\" ? \"source-over\" : \"destination-out\",\n        points: [\n          pos.x / oldScale - this.stage.x() / oldScale,\n          pos.y / oldScale - this.stage.y() / oldScale\n        ]\n      });\n      this.freeDrawLayer.add(lastLine);\n    });\n    this.stage.on(\"mouseup\", () => {\n      isPaint = false;\n    });\n    this.stage.on(\"mousemove\", () => {\n      let oldScale = this.stage.scaleX();\n      if (!isPaint) {\n        return;\n      }\n      const pos = this.stage.getPointerPosition();\n      let newPoints = lastLine\n        .points()\n        .concat([\n          pos.x / oldScale - this.stage.x() / oldScale,\n          pos.y / oldScale - this.stage.y() / oldScale\n        ]);\n      lastLine.points(newPoints);\n      this.freeDrawLayer.batchDraw();\n    });\n    // let select = document.getElementById(\"tool\");\n    // select.addEventListener(\"change\", function() {\n    //   mode = select.value;\n    // });\n  },\n  // 反序列化\n  loadCanvasFromJSON(state) {\n    if (!state) return;\n    this.stage = Konva.Node.create(JSON.parse(state), \"image-canvas\");\n    // 添加背景图\n    this.stage.find(\"#bgImg\").forEach((node) => {\n      let img = new Image();\n      img.src = node.getAttr(\"source\");\n      img.onload = () => {\n        node.image(img);\n        this.stage.batchDraw();\n      };\n    });\n    // this.stage.findOne(\"#bgImg\")\n    this.freeDrawLayer = this.stage.getLayers()[1];\n    this.addEvent();\n    this.freeDrawLayer.batchDraw();\n    this.isSwitching = false;\n    // 画笔层\n    // let const1 = this.stage.find(\"#free_draw_canvas\");\n    // this.addEvent();\n  },\n  saveCurrItemState() {\n    if (!this.currItem) return;\n    let state = this.stage.toJSON();\n    this.currItem.save(state);\n  },\n  toNext() {\n    this.saveCurrItemState();\n    this.switchImage(this.currIndex + 1);\n  },\n  toPrev() {\n    this.saveCurrItemState();\n    this.switchImage(this.currIndex - 1);\n  },\n  toDataUrl() {\n    this.imgUrl = this.stage.toDataURL({\n      x: 0,\n      y: 0,\n      width: 600,\n      height: 400,\n      pixelRatio: 3\n    });\n  },\n  // 加载背景图片\n  loadBackImage(itemObj, cb) {\n    const { imageInfo } = itemObj;\n    const { scale } = imageInfo;\n    Konva.Image.fromURL(itemObj.originUrl, (kImg) => {\n      kImg.setAttrs({\n        // 设置居中\n        x: this.getBgImgXYOffset(scale.width, null),\n        y: this.getBgImgXYOffset(null, scale.height),\n        id: \"bgImg\",\n        source: itemObj.originUrl,\n        draggable: false,\n        width: scale.width,\n        height: scale.height\n      });\n      this.bgImgLayer.add(kImg);\n      this.bgImgLayer.batchDraw();\n      // 保存当前背景对象\n      this.currItem.bgImg = kImg;\n      cb && cb();\n    });\n  },\n  // 获取背景图片xy偏移量\n  getBgImgXYOffset(width, height) {\n    if (width) {\n      return C_WIDTH > width ? (C_WIDTH - width) / 2 : 0;\n    }\n    if (height) {\n      return C_HEIGHT > height ? (C_HEIGHT - height) / 2 : 0;\n    }\n  },\n\n  afterSwitch(index, itemObj, isFirstRender = false) {\n    if (isFirstRender) {\n      // 首次渲染;\n      if (!this.bgImgLayer) {\n        let bgImgLayer = new Konva.Layer();\n        this.bgImgLayer = bgImgLayer;\n        this.loadBackImage(itemObj, this.initFreeDrawCanvas);\n        this.stage.add(bgImgLayer);\n      } else {\n        this.bgImgLayer && this.bgImgLayer.removeChildren();\n        this.loadBackImage(itemObj);\n      }\n      this.clearFreeDrawLayer();\n      this.isSwitching = false;\n    }\n  },\n  // 设置stage宽高\n  setStageWH(w, h) {\n    this.stage.width(w);\n    this.stage.height(h);\n  },\n  // 清除画笔层\n  clearFreeDrawLayer() {\n    if (this.freeDrawLayer) {\n      this.freeDrawLayer.removeChildren();\n      this.freeDrawLayer.draw();\n    }\n  },\n  // 切换图层\n  switchImage(index) {\n    console.log(\"=====switchImage=====\", index);\n    if (index < -1) return;\n    if (this.isSwitching) return;\n    let img = this.imageList[index];\n    if (!img) return;\n    let itemObj;\n    if (img && !img.isRender) {\n      this.isSwitching = true;\n      console.log(\"首次渲染\");\n      // 首次渲染\n      itemObj = new Item(\n        {\n          url: this.imageList[index].url,\n          conWH: { width: 800, height: 600 }\n        },\n        () => this.afterSwitch(index, itemObj, true)\n      );\n      this.currIndex = index;\n      this.currItem = itemObj;\n      this.itemList[this.currIndex] = itemObj;\n      this.imageList[this.currIndex].isRender = true;\n    } else {\n      this.isSwitching = true;\n      this.currIndex = index;\n      // 非首次渲染\n      console.log(\"======非首次渲染=====\", this.currIndex);\n      console.log(\n        \"this.itemList[this.currIndex]\",\n        this.itemList[this.currIndex]\n      );\n      this.currItem = this.itemList[this.currIndex];\n      console.log(\" this.currItem\", this.currItem);\n      let currState = this.currItem.getCurrState();\n      console.log(\"currState\", currState);\n      this.loadCanvasFromJSON(JSON.parse(currState));\n      // this.loadBackImage(this.currItem);\n      // this.stage = Konva.Node.create(JSON.parse(currState), \"image-canvas\");\n      // // this.stage.find(\"#bgImg\").\n      // let image = new Image();\n      // image.onload = () => {\n      //   this.stage.find(\"#bgImg\")[0].image(image);\n      //   this.stage.draw();\n      // };\n      // image.src = this.currItem.originUrl;\n      // this.stage.find(\"#free_draw_canvas\")\n      // this.freeDrawLayer.batchDraw();\n      // this.stage.batchDraw();\n\n      // this.stage.forEach((d) => {\n      //   console.log(\"d\", d);\n      // });\n      // this.bgImgLayer.batchDraw();\n      // this.initFreeDrawCanvas();\n\n      // this.freeDrawLayer.batchDraw();\n      // this.freeDrawLayer.zIndex(99);\n    }\n  }\n};\nexport default {\n  methods,\n  mounted() {\n    // first we need Konva core things: stage and layer\n    let stage = new Konva.Stage({\n      container: \"image-canvas\",\n      scaleY: 1,\n      scaleX: 1,\n      centeredScaling: true,\n      // 确定了canvas的宽高\n      width: 800,\n      height: 600\n    });\n\n    this.stage = stage;\n\n    // 背景层\n    this.bgImgLayer = new Konva.Layer({\n      id: \"bg_image_layer\"\n    });\n\n    // 绘画层\n    this.freeDrawLayer = new Konva.Layer({\n      id: \"free_draw_layer\",\n      backgroundColor: \"red\"\n    });\n\n    this.stage.add(this.bgImgLayer);\n    this.stage.add(this.freeDrawLayer);\n\n    this.addEvent();\n\n    // 组装数据格式\n    this.imageList = this.imageList.map((d) => {\n      return {\n        isRender: false,\n        url: d\n      };\n    });\n    this.toNext();\n    // this.initFreeDrawCanvas();\n    // this.();\n\n    // 初始化时候需要异步\n    // setTimeout(() => {}, 100);\n  },\n  data() {\n    return {\n      mode: \"brush\",\n      isMovingBgImg: false,\n      zoomStep: 0.1,\n      stage: null,\n      imgUrl: null,\n      imageList: imageList,\n      currIndex: -1,\n      currItem: null,\n      itemList: [],\n      conWH: { width: 800, height: 600 },\n      freeDrawLayer: null,\n      bgImgLayer: null,\n      isSwitching: false\n    };\n  },\n  components: {}\n};\n</script>\n\n<style lang=\"less\" scoped>\n#image-decorator-wrap {\n  border: 1px solid red;\n  width: 800px;\n  height: 600px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n  overflow: hidden;\n\n  #image-canvas {\n    border: 1px solid yellow;\n  }\n  .img {\n    margin-top: 20px;\n    border: 1px solid blue;\n  }\n}\n</style>\n"],"sourceRoot":"src/page"}]}