{"remainingRequest":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/babel-loader/lib/index.js!/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/eslint-loader/index.js??ref--13-0!/Users/haopeiwei/Documents/hpw/web-board/konva-board/src/components/Item.js","dependencies":[{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/src/components/Item.js","mtime":1599816203767},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/cache-loader/dist/cjs.js","mtime":1591588454175},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/babel-loader/lib/index.js","mtime":1591149279866},{"path":"/Users/haopeiwei/Documents/hpw/web-board/konva-board/node_modules/eslint-loader/index.js","mtime":1591241791494}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/haopeiwei/Documents/hpw/web-board/konva-board/src/components/Item.js"],"names":["isImageVaild","Item","options","scale","historyList","historyIndex","url","canvas","originState","h5","h5canvas","console","log","length","index","putImageData","slice","data","type","list","concat","reverse","history","i","_findHistory","Array","isArray","flag","JSON","stringify","push","imageData","hstoryList","ctx","export"],"mappings":"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","sourcesContent":["import { isImageVaild } from \"../utils.js\";\n// 每张带修饰图片产生一个实例\nexport default class Item {\n  constructor(options) {\n    this.scale = 1;\n    this.historyList = [];\n    this.historyIndex = -1;\n    this.url = options.url;\n    this.canvas = options.canvas;\n    this.originState = null;\n    this.h5 = {\n      originState: null,\n      canvas: options.h5canvas,\n      historyList: [],\n      historyIndex: -1\n    };\n  }\n  getHis() {\n    console.log(\"getHis---length\", this.historyList.length);\n  }\n\n  getCurrState(index) {\n    // 当前状态\n    if (!this.historyList.length) return;\n\n    let historyList = this.historyList;\n    if (index <= 0) {\n      // 左边界\n      this.h5.canvas.putImageData(this.h5.originState, 0, 0);\n      this.historyList = [];\n      return this.originState;\n    }\n    this.historyList = this.historyList.slice(0, index + 1);\n    let data = historyList[index].data;\n    if (historyList[index].type === \"h5\") {\n      // 原生\n      // console.log(\"data\", data);\n      this.h5.canvas.putImageData(data, 0, 0);\n      // this.h5.canvas.putImageData(imageData, 0, 0);\n      // return;\n    } else {\n      // fabirc\n      return historyList[index].data;\n    }\n    // this\n  }\n  _findHistory() {\n    // h5 f f h5\n    // 回退的数据即就是相同type左边距最近data\n\n    // 没有历史记录即为初始状态\n    if (this.historyList.length === 0) {\n      return [\n        { type: \"h5\", data: this.h5.originState },\n        { type: \"fabric\", data: this.originState }\n      ];\n    }\n    let historyList = this.historyList;\n    let length = this.historyList.length - 1;\n    console.log(\"type\", \"this.historyList\", this.historyList);\n    let type = this.historyList[length].type;\n    let list = []\n      .concat(this.historyList)\n      .reverse()\n      .slice(1);\n    let history = null;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].type === type) {\n        history = list[i];\n        break;\n      }\n    }\n    // 临界状态 返回初始状态\n    if (!history) {\n      history =\n        type === \"fabric\"\n          ? { type: \"fabric\", data: this.originState }\n          : { type: \"h5\", data: this.h5.originState };\n    }\n    this.historyList = historyList.slice(0, length);\n    console.log(\"_____findHistory\", this.historyList);\n    return history;\n  }\n  getPreHistory() {\n    let history = this._findHistory();\n    if (Array.isArray(history)) {\n      return null;\n    }\n    let historyIndex = this.historyIndex - 1;\n    this.historyIndex = historyIndex;\n    console.log(\"getPreHistory--after\", this.historyIndex);\n    return history;\n  }\n\n  isImageVaild() {\n    return isImageVaild(this.url);\n  }\n  currItem() {}\n  getCurrStateIndex() {\n    return this.historyIndex;\n  }\n  save(type, data, flag = false) {\n    console.log(\"---item---save---\");\n    if (flag === \"init\") {\n      if (type === \"h5\") {\n        this.h5.originState = data;\n      } else if (type === \"fabric\") {\n        this.originState = data;\n      }\n\n      // this.historyList.push({h5: {data: }})\n    }\n    if (!flag) {\n      // console.log(\"---item---save---bbbbb\");\n      if (this.historyList.length) {\n        if (\n          JSON.stringify(data) ===\n          JSON.stringify(this.historyList[this.historyList.length - 1].data)\n        ) {\n          // 状态相等不保存\n          return;\n        }\n      }\n      // 记录修改历史\n      // 未考虑保存历史记录数量过大的情况\n      let historyList = this.historyList;\n      let historyIndex = this.historyIndex;\n      console.log(\n        \"type\",\n        type,\n        \"save---before\",\n        this.historyIndex,\n        \"length\",\n        this.historyList.length\n      );\n      // 若从历史记录中的非终点开始进行了修改\n      // 则需要移除之后的历史记录，并将当前作为新的终点\n      // !注意，即使针对当前历史记录没有修改，也会进行保存，并抹掉之后的历史记录\n      if (historyIndex < historyList.length - 1) {\n        console.log(\"yes\");\n        historyList = historyList.slice(0, historyIndex + 1);\n      }\n\n      historyList.push({ data, type });\n\n      historyIndex += 1;\n      this.historyList = historyList;\n\n      this.historyIndex = historyIndex;\n    }\n    // \"this.historyList\",\n    // this.historyList\n    console.log(\n      \"save----after\",\n      this.historyIndex,\n      \"length\",\n      this.historyList.length\n    );\n  }\n\n  geth5State(flag) {\n    if (!this.h5.historyList.length) return;\n    let imageData;\n    if (flag === \"undo\" && this.h5.historyIndex > 0) {\n      // 回退\n      imageData = this.h5.historyList[this.h5.historyIndex - 1];\n      this.h5.canvas.putImageData(imageData, 0, 0);\n      this.h5.historyIndex -= 1;\n      // 始终保存最原始记录\n      this.h5.historyList = this.h5.historyList.slice(\n        0,\n        this.h5.historyIndex === 0 ? 1 : this.h5.historyIndex\n      );\n    }\n  }\n  h5undo() {\n    if (!this.h5.hstoryList.length) return;\n    let imageData = this.h5.historyList[this.h5.historyIndex - 1];\n    this.ctx.putImageData(imageData, 0, 0);\n    this.h5.historyIndex -= 1;\n  }\n  h5exprot() {\n    return this.h5.canvas.export();\n  }\n}\n"]}]}